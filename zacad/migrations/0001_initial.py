# Generated by Django 3.1.3 on 2021-02-18 03:19

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5Auth',
            fields=[
                ('mb_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('au_menu', models.CharField(max_length=20)),
                ('au_auth', models.CharField(max_length=5)),
            ],
            options={
                'db_table': 'g5_auth',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5Autosave',
            fields=[
                ('as_id', models.AutoField(primary_key=True, serialize=False)),
                ('mb_id', models.CharField(max_length=20)),
                ('as_uid', models.PositiveBigIntegerField(unique=True)),
                ('as_subject', models.CharField(max_length=255)),
                ('as_content', models.TextField()),
                ('as_datetime', models.DateTimeField()),
            ],
            options={
                'db_table': 'g5_autosave',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5Board',
            fields=[
                ('bo_table', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('gr_id', models.CharField(max_length=255)),
                ('bo_subject', models.CharField(max_length=255)),
                ('bo_mobile_subject', models.CharField(max_length=255)),
                ('bo_device', models.CharField(max_length=6)),
                ('bo_admin', models.CharField(max_length=255)),
                ('bo_list_level', models.IntegerField()),
                ('bo_read_level', models.IntegerField()),
                ('bo_write_level', models.IntegerField()),
                ('bo_reply_level', models.IntegerField()),
                ('bo_comment_level', models.IntegerField()),
                ('bo_upload_level', models.IntegerField()),
                ('bo_download_level', models.IntegerField()),
                ('bo_html_level', models.IntegerField()),
                ('bo_link_level', models.IntegerField()),
                ('bo_count_delete', models.IntegerField()),
                ('bo_count_modify', models.IntegerField()),
                ('bo_read_point', models.IntegerField()),
                ('bo_write_point', models.IntegerField()),
                ('bo_comment_point', models.IntegerField()),
                ('bo_download_point', models.IntegerField()),
                ('bo_use_category', models.IntegerField()),
                ('bo_category_list', models.TextField()),
                ('bo_use_sideview', models.IntegerField()),
                ('bo_use_file_content', models.IntegerField()),
                ('bo_use_secret', models.IntegerField()),
                ('bo_use_dhtml_editor', models.IntegerField()),
                ('bo_use_rss_view', models.IntegerField()),
                ('bo_use_good', models.IntegerField()),
                ('bo_use_nogood', models.IntegerField()),
                ('bo_use_name', models.IntegerField()),
                ('bo_use_signature', models.IntegerField()),
                ('bo_use_ip_view', models.IntegerField()),
                ('bo_use_list_view', models.IntegerField()),
                ('bo_use_list_file', models.IntegerField()),
                ('bo_use_list_content', models.IntegerField()),
                ('bo_table_width', models.IntegerField()),
                ('bo_subject_len', models.IntegerField()),
                ('bo_mobile_subject_len', models.IntegerField()),
                ('bo_page_rows', models.IntegerField()),
                ('bo_mobile_page_rows', models.IntegerField()),
                ('bo_new', models.IntegerField()),
                ('bo_hot', models.IntegerField()),
                ('bo_image_width', models.IntegerField()),
                ('bo_skin', models.CharField(max_length=255)),
                ('bo_mobile_skin', models.CharField(max_length=255)),
                ('bo_include_head', models.CharField(max_length=255)),
                ('bo_include_tail', models.CharField(max_length=255)),
                ('bo_content_head', models.TextField()),
                ('bo_mobile_content_head', models.TextField()),
                ('bo_content_tail', models.TextField()),
                ('bo_mobile_content_tail', models.TextField()),
                ('bo_insert_content', models.TextField()),
                ('bo_gallery_cols', models.IntegerField()),
                ('bo_gallery_width', models.IntegerField()),
                ('bo_gallery_height', models.IntegerField()),
                ('bo_mobile_gallery_width', models.IntegerField()),
                ('bo_mobile_gallery_height', models.IntegerField()),
                ('bo_upload_size', models.IntegerField()),
                ('bo_reply_order', models.IntegerField()),
                ('bo_use_search', models.IntegerField()),
                ('bo_order', models.IntegerField()),
                ('bo_count_write', models.IntegerField()),
                ('bo_count_comment', models.IntegerField()),
                ('bo_write_min', models.IntegerField()),
                ('bo_write_max', models.IntegerField()),
                ('bo_comment_min', models.IntegerField()),
                ('bo_comment_max', models.IntegerField()),
                ('bo_notice', models.TextField()),
                ('bo_upload_count', models.IntegerField()),
                ('bo_use_email', models.IntegerField()),
                ('bo_use_cert', models.CharField(max_length=8)),
                ('bo_use_sns', models.IntegerField()),
                ('bo_use_captcha', models.IntegerField()),
                ('bo_sort_field', models.CharField(max_length=255)),
                ('bo_1_subj', models.CharField(max_length=255)),
                ('bo_2_subj', models.CharField(max_length=255)),
                ('bo_3_subj', models.CharField(max_length=255)),
                ('bo_4_subj', models.CharField(max_length=255)),
                ('bo_5_subj', models.CharField(max_length=255)),
                ('bo_6_subj', models.CharField(max_length=255)),
                ('bo_7_subj', models.CharField(max_length=255)),
                ('bo_8_subj', models.CharField(max_length=255)),
                ('bo_9_subj', models.CharField(max_length=255)),
                ('bo_10_subj', models.CharField(max_length=255)),
                ('bo_1', models.CharField(max_length=255)),
                ('bo_2', models.CharField(max_length=255)),
                ('bo_3', models.CharField(max_length=255)),
                ('bo_4', models.CharField(max_length=255)),
                ('bo_5', models.CharField(max_length=255)),
                ('bo_6', models.CharField(max_length=255)),
                ('bo_7', models.CharField(max_length=255)),
                ('bo_8', models.CharField(max_length=255)),
                ('bo_9', models.CharField(max_length=255)),
                ('bo_10', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'g5_board',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5BoardFile',
            fields=[
                ('bo_table', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('wr_id', models.IntegerField()),
                ('bf_no', models.IntegerField()),
                ('bf_source', models.CharField(max_length=255)),
                ('bf_file', models.CharField(max_length=255)),
                ('bf_download', models.IntegerField()),
                ('bf_content', models.TextField()),
                ('bf_filesize', models.IntegerField()),
                ('bf_width', models.IntegerField()),
                ('bf_height', models.SmallIntegerField()),
                ('bf_type', models.IntegerField()),
                ('bf_datetime', models.DateTimeField()),
            ],
            options={
                'db_table': 'g5_board_file',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5BoardGood',
            fields=[
                ('bg_id', models.AutoField(primary_key=True, serialize=False)),
                ('bo_table', models.CharField(max_length=20)),
                ('wr_id', models.IntegerField()),
                ('mb_id', models.CharField(max_length=20)),
                ('bg_flag', models.CharField(max_length=255)),
                ('bg_datetime', models.DateTimeField()),
            ],
            options={
                'db_table': 'g5_board_good',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5BoardNew',
            fields=[
                ('bn_id', models.AutoField(primary_key=True, serialize=False)),
                ('bo_table', models.CharField(max_length=20)),
                ('wr_id', models.IntegerField()),
                ('wr_parent', models.IntegerField()),
                ('bn_datetime', models.DateTimeField()),
                ('mb_id', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'g5_board_new',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5CertHistory',
            fields=[
                ('cr_id', models.AutoField(primary_key=True, serialize=False)),
                ('mb_id', models.CharField(max_length=20)),
                ('cr_company', models.CharField(max_length=255)),
                ('cr_method', models.CharField(max_length=255)),
                ('cr_ip', models.CharField(max_length=255)),
                ('cr_date', models.DateField()),
                ('cr_time', models.TimeField()),
            ],
            options={
                'db_table': 'g5_cert_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5Config',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cf_title', models.CharField(max_length=255)),
                ('cf_theme', models.CharField(max_length=255)),
                ('cf_admin', models.CharField(max_length=255)),
                ('cf_admin_email', models.CharField(max_length=255)),
                ('cf_admin_email_name', models.CharField(max_length=255)),
                ('cf_add_script', models.TextField()),
                ('cf_use_point', models.IntegerField()),
                ('cf_point_term', models.IntegerField()),
                ('cf_use_copy_log', models.IntegerField()),
                ('cf_use_email_certify', models.IntegerField()),
                ('cf_login_point', models.IntegerField()),
                ('cf_cut_name', models.IntegerField()),
                ('cf_nick_modify', models.IntegerField()),
                ('cf_new_skin', models.CharField(max_length=255)),
                ('cf_new_rows', models.IntegerField()),
                ('cf_search_skin', models.CharField(max_length=255)),
                ('cf_connect_skin', models.CharField(max_length=255)),
                ('cf_faq_skin', models.CharField(max_length=255)),
                ('cf_read_point', models.IntegerField()),
                ('cf_write_point', models.IntegerField()),
                ('cf_comment_point', models.IntegerField()),
                ('cf_download_point', models.IntegerField()),
                ('cf_write_pages', models.IntegerField()),
                ('cf_mobile_pages', models.IntegerField()),
                ('cf_link_target', models.CharField(max_length=255)),
                ('cf_delay_sec', models.IntegerField()),
                ('cf_filter', models.TextField()),
                ('cf_possible_ip', models.TextField()),
                ('cf_intercept_ip', models.TextField()),
                ('cf_analytics', models.TextField()),
                ('cf_add_meta', models.TextField()),
                ('cf_syndi_token', models.CharField(max_length=255)),
                ('cf_syndi_except', models.TextField()),
                ('cf_member_skin', models.CharField(max_length=255)),
                ('cf_use_homepage', models.IntegerField()),
                ('cf_req_homepage', models.IntegerField()),
                ('cf_use_tel', models.IntegerField()),
                ('cf_req_tel', models.IntegerField()),
                ('cf_use_hp', models.IntegerField()),
                ('cf_req_hp', models.IntegerField()),
                ('cf_use_addr', models.IntegerField()),
                ('cf_req_addr', models.IntegerField()),
                ('cf_use_signature', models.IntegerField()),
                ('cf_req_signature', models.IntegerField()),
                ('cf_use_profile', models.IntegerField()),
                ('cf_req_profile', models.IntegerField()),
                ('cf_register_level', models.IntegerField()),
                ('cf_register_point', models.IntegerField()),
                ('cf_icon_level', models.IntegerField()),
                ('cf_use_recommend', models.IntegerField()),
                ('cf_recommend_point', models.IntegerField()),
                ('cf_leave_day', models.IntegerField()),
                ('cf_search_part', models.IntegerField()),
                ('cf_email_use', models.IntegerField()),
                ('cf_email_wr_super_admin', models.IntegerField()),
                ('cf_email_wr_group_admin', models.IntegerField()),
                ('cf_email_wr_board_admin', models.IntegerField()),
                ('cf_email_wr_write', models.IntegerField()),
                ('cf_email_wr_comment_all', models.IntegerField()),
                ('cf_email_mb_super_admin', models.IntegerField()),
                ('cf_email_mb_member', models.IntegerField()),
                ('cf_email_po_super_admin', models.IntegerField()),
                ('cf_prohibit_id', models.TextField()),
                ('cf_prohibit_email', models.TextField()),
                ('cf_new_del', models.IntegerField()),
                ('cf_memo_del', models.IntegerField()),
                ('cf_visit_del', models.IntegerField()),
                ('cf_popular_del', models.IntegerField()),
                ('cf_optimize_date', models.DateField()),
                ('cf_use_member_icon', models.IntegerField()),
                ('cf_member_icon_size', models.IntegerField()),
                ('cf_member_icon_width', models.IntegerField()),
                ('cf_member_icon_height', models.IntegerField()),
                ('cf_member_img_size', models.IntegerField()),
                ('cf_member_img_width', models.IntegerField()),
                ('cf_member_img_height', models.IntegerField()),
                ('cf_login_minutes', models.IntegerField()),
                ('cf_image_extension', models.CharField(max_length=255)),
                ('cf_flash_extension', models.CharField(max_length=255)),
                ('cf_movie_extension', models.CharField(max_length=255)),
                ('cf_formmail_is_member', models.IntegerField()),
                ('cf_page_rows', models.IntegerField()),
                ('cf_mobile_page_rows', models.IntegerField()),
                ('cf_visit', models.CharField(max_length=255)),
                ('cf_max_po_id', models.IntegerField()),
                ('cf_stipulation', models.TextField()),
                ('cf_privacy', models.TextField()),
                ('cf_open_modify', models.IntegerField()),
                ('cf_memo_send_point', models.IntegerField()),
                ('cf_mobile_new_skin', models.CharField(max_length=255)),
                ('cf_mobile_search_skin', models.CharField(max_length=255)),
                ('cf_mobile_connect_skin', models.CharField(max_length=255)),
                ('cf_mobile_faq_skin', models.CharField(max_length=255)),
                ('cf_mobile_member_skin', models.CharField(max_length=255)),
                ('cf_captcha_mp3', models.CharField(max_length=255)),
                ('cf_editor', models.CharField(max_length=255)),
                ('cf_cert_use', models.IntegerField()),
                ('cf_cert_ipin', models.CharField(max_length=255)),
                ('cf_cert_hp', models.CharField(max_length=255)),
                ('cf_cert_kcb_cd', models.CharField(max_length=255)),
                ('cf_cert_kcp_cd', models.CharField(max_length=255)),
                ('cf_lg_mid', models.CharField(max_length=255)),
                ('cf_lg_mert_key', models.CharField(max_length=255)),
                ('cf_cert_limit', models.IntegerField()),
                ('cf_cert_req', models.IntegerField()),
                ('cf_sms_use', models.CharField(max_length=255)),
                ('cf_sms_type', models.CharField(max_length=10)),
                ('cf_icode_id', models.CharField(max_length=255)),
                ('cf_icode_pw', models.CharField(max_length=255)),
                ('cf_icode_server_ip', models.CharField(max_length=255)),
                ('cf_icode_server_port', models.CharField(max_length=255)),
                ('cf_googl_shorturl_apikey', models.CharField(max_length=255)),
                ('cf_social_login_use', models.IntegerField()),
                ('cf_social_servicelist', models.CharField(max_length=255)),
                ('cf_payco_clientid', models.CharField(max_length=100)),
                ('cf_payco_secret', models.CharField(max_length=100)),
                ('cf_facebook_appid', models.CharField(max_length=255)),
                ('cf_facebook_secret', models.CharField(max_length=255)),
                ('cf_twitter_key', models.CharField(max_length=255)),
                ('cf_twitter_secret', models.CharField(max_length=255)),
                ('cf_google_clientid', models.CharField(max_length=100)),
                ('cf_google_secret', models.CharField(max_length=100)),
                ('cf_naver_clientid', models.CharField(max_length=100)),
                ('cf_naver_secret', models.CharField(max_length=100)),
                ('cf_kakao_rest_key', models.CharField(max_length=100)),
                ('cf_kakao_client_secret', models.CharField(max_length=100)),
                ('cf_kakao_js_apikey', models.CharField(max_length=255)),
                ('cf_captcha', models.CharField(max_length=100)),
                ('cf_recaptcha_site_key', models.CharField(max_length=100)),
                ('cf_recaptcha_secret_key', models.CharField(max_length=100)),
                ('cf_1_subj', models.CharField(max_length=255)),
                ('cf_2_subj', models.CharField(max_length=255)),
                ('cf_3_subj', models.CharField(max_length=255)),
                ('cf_4_subj', models.CharField(max_length=255)),
                ('cf_5_subj', models.CharField(max_length=255)),
                ('cf_6_subj', models.CharField(max_length=255)),
                ('cf_7_subj', models.CharField(max_length=255)),
                ('cf_8_subj', models.CharField(max_length=255)),
                ('cf_9_subj', models.CharField(max_length=255)),
                ('cf_10_subj', models.CharField(max_length=255)),
                ('cf_1', models.CharField(max_length=255)),
                ('cf_2', models.CharField(max_length=255)),
                ('cf_3', models.CharField(max_length=255)),
                ('cf_4', models.CharField(max_length=255)),
                ('cf_5', models.CharField(max_length=255)),
                ('cf_6', models.CharField(max_length=255)),
                ('cf_7', models.CharField(max_length=255)),
                ('cf_8', models.CharField(max_length=255)),
                ('cf_9', models.CharField(max_length=255)),
                ('cf_10', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'g5_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5Content',
            fields=[
                ('co_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('co_html', models.IntegerField()),
                ('co_subject', models.CharField(max_length=255)),
                ('co_content', models.TextField()),
                ('co_mobile_content', models.TextField()),
                ('co_skin', models.CharField(max_length=255)),
                ('co_mobile_skin', models.CharField(max_length=255)),
                ('co_tag_filter_use', models.IntegerField()),
                ('co_hit', models.IntegerField()),
                ('co_include_head', models.CharField(max_length=255)),
                ('co_include_tail', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'g5_content',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5Faq',
            fields=[
                ('fa_id', models.AutoField(primary_key=True, serialize=False)),
                ('fm_id', models.IntegerField()),
                ('fa_subject', models.TextField()),
                ('fa_content', models.TextField()),
                ('fa_order', models.IntegerField()),
            ],
            options={
                'db_table': 'g5_faq',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5FaqMaster',
            fields=[
                ('fm_id', models.AutoField(primary_key=True, serialize=False)),
                ('fm_subject', models.CharField(max_length=255)),
                ('fm_head_html', models.TextField()),
                ('fm_tail_html', models.TextField()),
                ('fm_mobile_head_html', models.TextField()),
                ('fm_mobile_tail_html', models.TextField()),
                ('fm_order', models.IntegerField()),
            ],
            options={
                'db_table': 'g5_faq_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5Group',
            fields=[
                ('gr_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('gr_subject', models.CharField(max_length=255)),
                ('gr_device', models.CharField(max_length=6)),
                ('gr_admin', models.CharField(max_length=255)),
                ('gr_use_access', models.IntegerField()),
                ('gr_order', models.IntegerField()),
                ('gr_1_subj', models.CharField(max_length=255)),
                ('gr_2_subj', models.CharField(max_length=255)),
                ('gr_3_subj', models.CharField(max_length=255)),
                ('gr_4_subj', models.CharField(max_length=255)),
                ('gr_5_subj', models.CharField(max_length=255)),
                ('gr_6_subj', models.CharField(max_length=255)),
                ('gr_7_subj', models.CharField(max_length=255)),
                ('gr_8_subj', models.CharField(max_length=255)),
                ('gr_9_subj', models.CharField(max_length=255)),
                ('gr_10_subj', models.CharField(max_length=255)),
                ('gr_1', models.CharField(max_length=255)),
                ('gr_2', models.CharField(max_length=255)),
                ('gr_3', models.CharField(max_length=255)),
                ('gr_4', models.CharField(max_length=255)),
                ('gr_5', models.CharField(max_length=255)),
                ('gr_6', models.CharField(max_length=255)),
                ('gr_7', models.CharField(max_length=255)),
                ('gr_8', models.CharField(max_length=255)),
                ('gr_9', models.CharField(max_length=255)),
                ('gr_10', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'g5_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5GroupMember',
            fields=[
                ('gm_id', models.AutoField(primary_key=True, serialize=False)),
                ('gr_id', models.CharField(max_length=255)),
                ('mb_id', models.CharField(max_length=20)),
                ('gm_datetime', models.DateTimeField()),
            ],
            options={
                'db_table': 'g5_group_member',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5Login',
            fields=[
                ('lo_ip', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('mb_id', models.CharField(max_length=20)),
                ('lo_datetime', models.DateTimeField()),
                ('lo_location', models.TextField()),
                ('lo_url', models.TextField()),
            ],
            options={
                'db_table': 'g5_login',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5Mail',
            fields=[
                ('ma_id', models.AutoField(primary_key=True, serialize=False)),
                ('ma_subject', models.CharField(max_length=255)),
                ('ma_content', models.TextField()),
                ('ma_time', models.DateTimeField()),
                ('ma_ip', models.CharField(max_length=255)),
                ('ma_last_option', models.TextField()),
            ],
            options={
                'db_table': 'g5_mail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5Member',
            fields=[
                ('mb_no', models.AutoField(primary_key=True, serialize=False)),
                ('mb_id', models.CharField(max_length=20, unique=True)),
                ('mb_password', models.CharField(max_length=255)),
                ('mb_name', models.CharField(max_length=255)),
                ('mb_nick', models.CharField(max_length=255)),
                ('mb_nick_date', models.DateField()),
                ('mb_email', models.CharField(max_length=255)),
                ('mb_homepage', models.CharField(max_length=255)),
                ('mb_level', models.IntegerField()),
                ('mb_sex', models.CharField(max_length=1)),
                ('mb_birth', models.CharField(max_length=255)),
                ('mb_tel', models.CharField(max_length=255)),
                ('mb_hp', models.CharField(max_length=255)),
                ('mb_certify', models.CharField(max_length=20)),
                ('mb_adult', models.IntegerField()),
                ('mb_dupinfo', models.CharField(max_length=255)),
                ('mb_zip1', models.CharField(max_length=3)),
                ('mb_zip2', models.CharField(max_length=3)),
                ('mb_addr1', models.CharField(max_length=255)),
                ('mb_addr2', models.CharField(max_length=255)),
                ('mb_addr3', models.CharField(max_length=255)),
                ('mb_addr_jibeon', models.CharField(max_length=255)),
                ('mb_signature', models.TextField()),
                ('mb_recommend', models.CharField(max_length=255)),
                ('mb_point', models.IntegerField()),
                ('mb_today_login', models.DateTimeField()),
                ('mb_login_ip', models.CharField(max_length=255)),
                ('mb_datetime', models.DateTimeField()),
                ('mb_ip', models.CharField(max_length=255)),
                ('mb_leave_date', models.CharField(max_length=8)),
                ('mb_intercept_date', models.CharField(max_length=8)),
                ('mb_email_certify', models.DateTimeField()),
                ('mb_email_certify2', models.CharField(max_length=255)),
                ('mb_memo', models.TextField()),
                ('mb_lost_certify', models.CharField(max_length=255)),
                ('mb_mailling', models.IntegerField()),
                ('mb_sms', models.IntegerField()),
                ('mb_open', models.IntegerField()),
                ('mb_open_date', models.DateField()),
                ('mb_profile', models.TextField()),
                ('mb_memo_call', models.CharField(max_length=255)),
                ('mb_1', models.CharField(max_length=255)),
                ('mb_2', models.CharField(max_length=255)),
                ('mb_3', models.CharField(max_length=255)),
                ('mb_4', models.CharField(max_length=255)),
                ('mb_5', models.CharField(max_length=255)),
                ('mb_6', models.CharField(max_length=255)),
                ('mb_7', models.CharField(max_length=255)),
                ('mb_8', models.CharField(max_length=255)),
                ('mb_9', models.CharField(max_length=255)),
                ('mb_10', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'g5_member',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5Memo',
            fields=[
                ('me_id', models.IntegerField(primary_key=True, serialize=False)),
                ('me_recv_mb_id', models.CharField(max_length=20)),
                ('me_send_mb_id', models.CharField(max_length=20)),
                ('me_send_datetime', models.DateTimeField()),
                ('me_read_datetime', models.DateTimeField()),
                ('me_memo', models.TextField()),
            ],
            options={
                'db_table': 'g5_memo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5Menu',
            fields=[
                ('me_id', models.AutoField(primary_key=True, serialize=False)),
                ('me_code', models.CharField(max_length=255)),
                ('me_name', models.CharField(max_length=255)),
                ('me_link', models.CharField(max_length=255)),
                ('me_target', models.CharField(max_length=255)),
                ('me_order', models.IntegerField()),
                ('me_use', models.IntegerField()),
                ('me_mobile_use', models.IntegerField()),
            ],
            options={
                'db_table': 'g5_menu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5NewWin',
            fields=[
                ('nw_id', models.AutoField(primary_key=True, serialize=False)),
                ('nw_device', models.CharField(max_length=10)),
                ('nw_begin_time', models.DateTimeField()),
                ('nw_end_time', models.DateTimeField()),
                ('nw_disable_hours', models.IntegerField()),
                ('nw_left', models.IntegerField()),
                ('nw_top', models.IntegerField()),
                ('nw_height', models.IntegerField()),
                ('nw_width', models.IntegerField()),
                ('nw_subject', models.TextField()),
                ('nw_content', models.TextField()),
                ('nw_content_html', models.IntegerField()),
            ],
            options={
                'db_table': 'g5_new_win',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5Point',
            fields=[
                ('po_id', models.AutoField(primary_key=True, serialize=False)),
                ('mb_id', models.CharField(max_length=20)),
                ('po_datetime', models.DateTimeField()),
                ('po_content', models.CharField(max_length=255)),
                ('po_point', models.IntegerField()),
                ('po_use_point', models.IntegerField()),
                ('po_expired', models.IntegerField()),
                ('po_expire_date', models.DateField()),
                ('po_mb_point', models.IntegerField()),
                ('po_rel_table', models.CharField(max_length=20)),
                ('po_rel_id', models.CharField(max_length=20)),
                ('po_rel_action', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'g5_point',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5Poll',
            fields=[
                ('po_id', models.AutoField(primary_key=True, serialize=False)),
                ('po_subject', models.CharField(max_length=255)),
                ('po_poll1', models.CharField(max_length=255)),
                ('po_poll2', models.CharField(max_length=255)),
                ('po_poll3', models.CharField(max_length=255)),
                ('po_poll4', models.CharField(max_length=255)),
                ('po_poll5', models.CharField(max_length=255)),
                ('po_poll6', models.CharField(max_length=255)),
                ('po_poll7', models.CharField(max_length=255)),
                ('po_poll8', models.CharField(max_length=255)),
                ('po_poll9', models.CharField(max_length=255)),
                ('po_cnt1', models.IntegerField()),
                ('po_cnt2', models.IntegerField()),
                ('po_cnt3', models.IntegerField()),
                ('po_cnt4', models.IntegerField()),
                ('po_cnt5', models.IntegerField()),
                ('po_cnt6', models.IntegerField()),
                ('po_cnt7', models.IntegerField()),
                ('po_cnt8', models.IntegerField()),
                ('po_cnt9', models.IntegerField()),
                ('po_etc', models.CharField(max_length=255)),
                ('po_level', models.IntegerField()),
                ('po_point', models.IntegerField()),
                ('po_date', models.DateField()),
                ('po_ips', models.TextField()),
                ('mb_ids', models.TextField()),
            ],
            options={
                'db_table': 'g5_poll',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5PollEtc',
            fields=[
                ('pc_id', models.IntegerField(primary_key=True, serialize=False)),
                ('po_id', models.IntegerField()),
                ('mb_id', models.CharField(max_length=20)),
                ('pc_name', models.CharField(max_length=255)),
                ('pc_idea', models.CharField(max_length=255)),
                ('pc_datetime', models.DateTimeField()),
            ],
            options={
                'db_table': 'g5_poll_etc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5Popular',
            fields=[
                ('pp_id', models.AutoField(primary_key=True, serialize=False)),
                ('pp_word', models.CharField(max_length=50)),
                ('pp_date', models.DateField()),
                ('pp_ip', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'g5_popular',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5QaConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qa_title', models.CharField(max_length=255)),
                ('qa_category', models.CharField(max_length=255)),
                ('qa_skin', models.CharField(max_length=255)),
                ('qa_mobile_skin', models.CharField(max_length=255)),
                ('qa_use_email', models.IntegerField()),
                ('qa_req_email', models.IntegerField()),
                ('qa_use_hp', models.IntegerField()),
                ('qa_req_hp', models.IntegerField()),
                ('qa_use_sms', models.IntegerField()),
                ('qa_send_number', models.CharField(max_length=255)),
                ('qa_admin_hp', models.CharField(max_length=255)),
                ('qa_admin_email', models.CharField(max_length=255)),
                ('qa_use_editor', models.IntegerField()),
                ('qa_subject_len', models.IntegerField()),
                ('qa_mobile_subject_len', models.IntegerField()),
                ('qa_page_rows', models.IntegerField()),
                ('qa_mobile_page_rows', models.IntegerField()),
                ('qa_image_width', models.IntegerField()),
                ('qa_upload_size', models.IntegerField()),
                ('qa_insert_content', models.TextField()),
                ('qa_include_head', models.CharField(max_length=255)),
                ('qa_include_tail', models.CharField(max_length=255)),
                ('qa_content_head', models.TextField()),
                ('qa_content_tail', models.TextField()),
                ('qa_mobile_content_head', models.TextField()),
                ('qa_mobile_content_tail', models.TextField()),
                ('qa_1_subj', models.CharField(max_length=255)),
                ('qa_2_subj', models.CharField(max_length=255)),
                ('qa_3_subj', models.CharField(max_length=255)),
                ('qa_4_subj', models.CharField(max_length=255)),
                ('qa_5_subj', models.CharField(max_length=255)),
                ('qa_1', models.CharField(max_length=255)),
                ('qa_2', models.CharField(max_length=255)),
                ('qa_3', models.CharField(max_length=255)),
                ('qa_4', models.CharField(max_length=255)),
                ('qa_5', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'g5_qa_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5QaContent',
            fields=[
                ('qa_id', models.AutoField(primary_key=True, serialize=False)),
                ('qa_num', models.IntegerField()),
                ('qa_parent', models.IntegerField()),
                ('qa_related', models.IntegerField()),
                ('mb_id', models.CharField(max_length=20)),
                ('qa_name', models.CharField(max_length=255)),
                ('qa_email', models.CharField(max_length=255)),
                ('qa_hp', models.CharField(max_length=255)),
                ('qa_type', models.IntegerField()),
                ('qa_category', models.CharField(max_length=255)),
                ('qa_email_recv', models.IntegerField()),
                ('qa_sms_recv', models.IntegerField()),
                ('qa_html', models.IntegerField()),
                ('qa_subject', models.CharField(max_length=255)),
                ('qa_content', models.TextField()),
                ('qa_status', models.IntegerField()),
                ('qa_file1', models.CharField(max_length=255)),
                ('qa_source1', models.CharField(max_length=255)),
                ('qa_file2', models.CharField(max_length=255)),
                ('qa_source2', models.CharField(max_length=255)),
                ('qa_ip', models.CharField(max_length=255)),
                ('qa_datetime', models.DateTimeField()),
                ('qa_1', models.CharField(max_length=255)),
                ('qa_2', models.CharField(max_length=255)),
                ('qa_3', models.CharField(max_length=255)),
                ('qa_4', models.CharField(max_length=255)),
                ('qa_5', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'g5_qa_content',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5Scrap',
            fields=[
                ('ms_id', models.AutoField(primary_key=True, serialize=False)),
                ('mb_id', models.CharField(max_length=20)),
                ('bo_table', models.CharField(max_length=20)),
                ('wr_id', models.CharField(max_length=15)),
                ('ms_datetime', models.DateTimeField()),
            ],
            options={
                'db_table': 'g5_scrap',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5Uniqid',
            fields=[
                ('uq_id', models.PositiveBigIntegerField(primary_key=True, serialize=False)),
                ('uq_ip', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'g5_uniqid',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5Visit',
            fields=[
                ('vi_id', models.IntegerField(primary_key=True, serialize=False)),
                ('vi_ip', models.CharField(max_length=255)),
                ('vi_date', models.DateField()),
                ('vi_time', models.TimeField()),
                ('vi_referer', models.TextField()),
                ('vi_agent', models.CharField(max_length=255)),
                ('vi_browser', models.CharField(max_length=255)),
                ('vi_os', models.CharField(max_length=255)),
                ('vi_device', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'g5_visit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5VisitSum',
            fields=[
                ('vs_date', models.DateField(primary_key=True, serialize=False)),
                ('vs_count', models.IntegerField()),
            ],
            options={
                'db_table': 'g5_visit_sum',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5WriteWithmindFaq',
            fields=[
                ('wr_id', models.AutoField(primary_key=True, serialize=False)),
                ('wr_num', models.IntegerField()),
                ('wr_reply', models.CharField(max_length=10)),
                ('wr_parent', models.IntegerField()),
                ('wr_is_comment', models.IntegerField()),
                ('wr_comment', models.IntegerField()),
                ('wr_comment_reply', models.CharField(max_length=5)),
                ('ca_name', models.CharField(max_length=255)),
                ('wr_option', models.CharField(max_length=23)),
                ('wr_subject', models.CharField(max_length=255)),
                ('wr_content', models.TextField()),
                ('wr_link1', models.TextField()),
                ('wr_link2', models.TextField()),
                ('wr_link1_hit', models.IntegerField()),
                ('wr_link2_hit', models.IntegerField()),
                ('wr_hit', models.IntegerField()),
                ('wr_good', models.IntegerField()),
                ('wr_nogood', models.IntegerField()),
                ('mb_id', models.CharField(max_length=20)),
                ('wr_password', models.CharField(max_length=255)),
                ('wr_name', models.CharField(max_length=255)),
                ('wr_email', models.CharField(max_length=255)),
                ('wr_homepage', models.CharField(max_length=255)),
                ('wr_datetime', models.DateTimeField()),
                ('wr_file', models.IntegerField()),
                ('wr_last', models.CharField(max_length=19)),
                ('wr_ip', models.CharField(max_length=255)),
                ('wr_facebook_user', models.CharField(max_length=255)),
                ('wr_twitter_user', models.CharField(max_length=255)),
                ('wr_1', models.CharField(max_length=255)),
                ('wr_2', models.CharField(max_length=255)),
                ('wr_3', models.CharField(max_length=255)),
                ('wr_4', models.CharField(max_length=255)),
                ('wr_5', models.CharField(max_length=255)),
                ('wr_6', models.CharField(max_length=255)),
                ('wr_7', models.CharField(max_length=255)),
                ('wr_8', models.CharField(max_length=255)),
                ('wr_9', models.CharField(max_length=255)),
                ('wr_10', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'g5_write_withmind_faq',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='G5WriteWithmindNotice',
            fields=[
                ('wr_id', models.AutoField(primary_key=True, serialize=False)),
                ('wr_num', models.IntegerField()),
                ('wr_reply', models.CharField(max_length=10)),
                ('wr_parent', models.IntegerField()),
                ('wr_is_comment', models.IntegerField()),
                ('wr_comment', models.IntegerField()),
                ('wr_comment_reply', models.CharField(max_length=5)),
                ('ca_name', models.CharField(max_length=255)),
                ('wr_option', models.CharField(max_length=23)),
                ('wr_subject', models.CharField(max_length=255)),
                ('wr_content', models.TextField()),
                ('wr_link1', models.TextField()),
                ('wr_link2', models.TextField()),
                ('wr_link1_hit', models.IntegerField()),
                ('wr_link2_hit', models.IntegerField()),
                ('wr_hit', models.IntegerField()),
                ('wr_good', models.IntegerField()),
                ('wr_nogood', models.IntegerField()),
                ('mb_id', models.CharField(max_length=20)),
                ('wr_password', models.CharField(max_length=255)),
                ('wr_name', models.CharField(max_length=255)),
                ('wr_email', models.CharField(max_length=255)),
                ('wr_homepage', models.CharField(max_length=255)),
                ('wr_datetime', models.DateTimeField()),
                ('wr_file', models.IntegerField()),
                ('wr_last', models.CharField(max_length=19)),
                ('wr_ip', models.CharField(max_length=255)),
                ('wr_facebook_user', models.CharField(max_length=255)),
                ('wr_twitter_user', models.CharField(max_length=255)),
                ('wr_1', models.CharField(max_length=255)),
                ('wr_2', models.CharField(max_length=255)),
                ('wr_3', models.CharField(max_length=255)),
                ('wr_4', models.CharField(max_length=255)),
                ('wr_5', models.CharField(max_length=255)),
                ('wr_6', models.CharField(max_length=255)),
                ('wr_7', models.CharField(max_length=255)),
                ('wr_8', models.CharField(max_length=255)),
                ('wr_9', models.CharField(max_length=255)),
                ('wr_10', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'g5_write_withmind_notice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImAdminGroup',
            fields=[
                ('group_key', models.AutoField(db_column='GROUP_KEY', primary_key=True, serialize=False)),
                ('group_type', models.IntegerField(blank=True, db_column='GROUP_TYPE', null=True)),
                ('group_name', models.CharField(db_column='GROUP_NAME', max_length=45)),
                ('campus_name', models.CharField(db_column='CAMPUS_NAME', max_length=45)),
                ('school_code', models.IntegerField(db_column='SCHOOL_CODE')),
                ('school_type', models.CharField(db_column='SCHOOL_TYPE', max_length=45)),
                ('school_gubun', models.CharField(db_column='SCHOOL_GUBUN', max_length=45)),
                ('est_type', models.CharField(db_column='EST_TYPE', max_length=45)),
                ('region', models.CharField(db_column='REGION', max_length=45)),
                ('link', models.CharField(db_column='LINK', max_length=250)),
                ('color', models.CharField(blank=True, db_column='COLOR', max_length=45, null=True)),
                ('group_no', models.CharField(blank=True, db_column='GROUP_NO', max_length=45, null=True)),
                ('regdate', models.CharField(db_column='REGDATE', max_length=50)),
            ],
            options={
                'db_table': 'IM_ADMIN_GROUP',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImAdminGroupInterview',
            fields=[
                ('gi_key', models.AutoField(db_column='GI_KEY', primary_key=True, serialize=False)),
                ('gi_state', models.CharField(blank=True, db_column='GI_STATE', max_length=1, null=True)),
                ('group_key', models.IntegerField(db_column='GROUP_KEY')),
                ('gi_code', models.IntegerField(blank=True, db_column='GI_CODE', null=True)),
                ('gi_name', models.CharField(db_column='GI_NAME', max_length=45)),
                ('gi_email', models.CharField(db_column='GI_EMAIL', max_length=45)),
                ('gi_subject', models.CharField(db_column='GI_SUBJECT', max_length=100)),
                ('gi_job_family', models.CharField(db_column='GI_JOB_FAMILY', max_length=100)),
                ('gi_job_sub', models.CharField(db_column='GI_JOB_SUB', max_length=100)),
                ('gi_start_date', models.CharField(blank=True, db_column='GI_START_DATE', max_length=45, null=True)),
                ('gi_start_time', models.CharField(blank=True, db_column='GI_START_TIME', max_length=45, null=True)),
                ('gi_end_date', models.CharField(blank=True, db_column='GI_END_DATE', max_length=45, null=True)),
                ('gi_end_time', models.CharField(blank=True, db_column='GI_END_TIME', max_length=45, null=True)),
                ('gi_1_tts', models.CharField(blank=True, db_column='GI_1_TTS', max_length=250, null=True)),
                ('gi_2_tts', models.CharField(blank=True, db_column='GI_2_TTS', max_length=250, null=True)),
                ('gi_3_tts', models.CharField(blank=True, db_column='GI_3_TTS', max_length=250, null=True)),
                ('regdate', models.CharField(db_column='REGDATE', max_length=45)),
            ],
            options={
                'db_table': 'IM_ADMIN_GROUP_INTERVIEW',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImAdminGroupInterviewData',
            fields=[
                ('gd_key', models.AutoField(db_column='GD_KEY', primary_key=True, serialize=False)),
                ('gi_code', models.CharField(db_column='GI_CODE', max_length=100)),
                ('user_key', models.IntegerField(db_column='USER_KEY')),
                ('qz_group', models.IntegerField(blank=True, db_column='QZ_GROUP', null=True)),
                ('regdate', models.CharField(db_column='REGDATE', max_length=50)),
            ],
            options={
                'db_table': 'IM_ADMIN_GROUP_INTERVIEW_DATA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImAdminUserEtc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_code', models.IntegerField(db_column='CLASS_CODE')),
                ('class_name', models.CharField(db_column='CLASS_NAME', max_length=45)),
            ],
            options={
                'db_table': 'IM_ADMIN_USER_ETC',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImAdUser',
            fields=[
                ('user_key', models.AutoField(db_column='USER_KEY', primary_key=True, serialize=False)),
                ('user_type', models.IntegerField(blank=True, db_column='USER_TYPE', null=True)),
                ('user_group', models.IntegerField(blank=True, db_column='USER_GROUP', null=True)),
                ('user_class', models.IntegerField(blank=True, db_column='USER_CLASS', null=True)),
                ('user_name', models.CharField(blank=True, db_column='USER_NAME', max_length=45, null=True)),
                ('user_id', models.CharField(blank=True, db_column='USER_ID', max_length=45, null=True)),
                ('user_pwd', models.CharField(blank=True, db_column='USER_PWD', max_length=100, null=True)),
                ('user_phone', models.CharField(blank=True, db_column='USER_PHONE', max_length=45, null=True)),
                ('user_email', models.CharField(blank=True, db_column='USER_EMAIL', max_length=45, null=True)),
                ('regdate', models.CharField(blank=True, db_column='REGDATE', max_length=100, null=True)),
            ],
            options={
                'db_table': 'IM_AD_USER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImAdvice',
            fields=[
                ('advice_key', models.AutoField(db_column='ADVICE_KEY', primary_key=True, serialize=False)),
                ('advice_top', models.IntegerField(db_column='ADVICE_TOP')),
                ('advice_writer', models.CharField(db_column='ADVICE_WRITER', max_length=45)),
                ('advice_title', models.CharField(db_column='ADVICE_TITLE', max_length=100)),
                ('advice_text', models.CharField(db_column='ADVICE_TEXT', max_length=2000)),
                ('regdate', models.CharField(db_column='REGDATE', max_length=45)),
            ],
            options={
                'db_table': 'IM_ADVICE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImAdviceFile',
            fields=[
                ('file_key', models.AutoField(db_column='FILE_KEY', primary_key=True, serialize=False)),
                ('file_fk', models.IntegerField(db_column='FILE_FK', unique=True)),
                ('file_url', models.CharField(blank=True, db_column='FILE_URL', max_length=250, null=True)),
                ('file_name', models.CharField(blank=True, db_column='FILE_NAME', max_length=250, null=True)),
                ('file_origin', models.CharField(blank=True, db_column='FILE_ORIGIN', max_length=250, null=True)),
                ('file_folder', models.CharField(blank=True, db_column='FILE_FOLDER', max_length=250, null=True)),
                ('file_size', models.IntegerField(blank=True, db_column='FILE_SIZE', null=True)),
            ],
            options={
                'db_table': 'IM_ADVICE_FILE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImApiKey',
            fields=[
                ('ak_pk', models.AutoField(db_column='AK_PK', primary_key=True, serialize=False)),
                ('company', models.CharField(db_column='COMPANY', max_length=50)),
                ('secretkey', models.CharField(db_column='SECRETKEY', max_length=50)),
            ],
            options={
                'db_table': 'IM_API_KEY',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImAppPush',
            fields=[
                ('push_key', models.AutoField(db_column='PUSH_KEY', primary_key=True, serialize=False)),
                ('push_user', models.CharField(blank=True, db_column='PUSH_USER', max_length=100, null=True)),
                ('push_type', models.CharField(blank=True, db_column='PUSH_TYPE', max_length=100, null=True)),
                ('push_addr', models.CharField(blank=True, db_column='PUSH_ADDR', max_length=100, null=True)),
                ('push_text', models.CharField(blank=True, db_column='PUSH_TEXT', max_length=2000, null=True)),
                ('regdate', models.DateTimeField(db_column='REGDATE')),
            ],
            options={
                'db_table': 'IM_APP_PUSH',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImAppPushType',
            fields=[
                ('idx', models.AutoField(db_column='IDX', primary_key=True, serialize=False)),
                ('push_type', models.CharField(blank=True, db_column='PUSH_TYPE', max_length=100, null=True)),
                ('push_name', models.CharField(blank=True, db_column='PUSH_NAME', max_length=100, null=True)),
            ],
            options={
                'db_table': 'IM_APP_PUSH_TYPE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_key', models.IntegerField(blank=True, db_column='CODE_KEY', null=True, unique=True)),
                ('code_name', models.CharField(blank=True, db_column='CODE_NAME', max_length=50, null=True)),
            ],
            options={
                'db_table': 'IM_CODE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImEwhaAdminUser',
            fields=[
                ('user_key', models.AutoField(db_column='USER_KEY', primary_key=True, serialize=False)),
                ('group_code', models.IntegerField(blank=True, db_column='GROUP_CODE', null=True)),
                ('user_id', models.CharField(blank=True, db_column='USER_ID', max_length=45, null=True)),
                ('user_pwd', models.CharField(blank=True, db_column='USER_PWD', max_length=100, null=True)),
                ('regdate', models.CharField(blank=True, db_column='REGDATE', max_length=100, null=True)),
            ],
            options={
                'db_table': 'IM_EWHA_ADMIN_USER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImEwhaGroup',
            fields=[
                ('group_code', models.AutoField(db_column='GROUP_CODE', primary_key=True, serialize=False)),
                ('group_dvsn', models.CharField(blank=True, db_column='GROUP_DVSN', max_length=45, null=True)),
                ('group_name', models.CharField(blank=True, db_column='GROUP_NAME', max_length=100, null=True)),
                ('group_intro', models.CharField(blank=True, db_column='GROUP_INTRO', max_length=250, null=True)),
            ],
            options={
                'db_table': 'IM_EWHA_GROUP',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImEwhaQuery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_code', models.IntegerField(db_column='GROUP_CODE')),
                ('qz_tts', models.CharField(blank=True, db_column='QZ_TTS', max_length=1000, null=True)),
                ('qz_time', models.CharField(db_column='QZ_TIME', max_length=45)),
            ],
            options={
                'db_table': 'IM_EWHA_QUERY',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImFaq',
            fields=[
                ('faq_key', models.AutoField(db_column='FAQ_KEY', primary_key=True, serialize=False)),
                ('faq_title', models.CharField(blank=True, db_column='FAQ_TITLE', max_length=100, null=True)),
                ('faq_text', models.CharField(blank=True, db_column='FAQ_TEXT', max_length=2000, null=True)),
                ('regdate', models.DateTimeField(db_column='REGDATE')),
            ],
            options={
                'db_table': 'IM_FAQ',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImFile',
            fields=[
                ('file_key', models.AutoField(db_column='FILE_KEY', primary_key=True, serialize=False)),
                ('user_key', models.IntegerField(db_column='USER_KEY', unique=True)),
                ('file_url', models.CharField(blank=True, db_column='FILE_URL', max_length=250, null=True)),
                ('file_name', models.CharField(blank=True, db_column='FILE_NAME', max_length=250, null=True)),
                ('file_origin', models.CharField(blank=True, db_column='FILE_ORIGIN', max_length=250, null=True)),
                ('file_folder', models.CharField(blank=True, db_column='FILE_FOLDER', max_length=250, null=True)),
                ('file_size', models.IntegerField(blank=True, db_column='FILE_SIZE', null=True)),
            ],
            options={
                'db_table': 'IM_FILE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImFixTts',
            fields=[
                ('fi_pk', models.AutoField(db_column='FI_PK', primary_key=True, serialize=False)),
                ('fi_tts', models.CharField(blank=True, db_column='FI_TTS', max_length=500, null=True)),
            ],
            options={
                'db_table': 'IM_FIX_TTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImGroupCount',
            fields=[
                ('gc_pk', models.AutoField(db_column='GC_PK', primary_key=True, serialize=False)),
                ('group_key', models.IntegerField(db_column='GROUP_KEY')),
                ('user_key', models.IntegerField(blank=True, db_column='USER_KEY', null=True)),
            ],
            options={
                'db_table': 'IM_GROUP_COUNT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImGroupCoupon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_key', models.IntegerField(db_column='GROUP_KEY', unique=True)),
                ('writer_key', models.IntegerField(blank=True, db_column='WRITER_KEY', null=True)),
                ('coupon_type', models.CharField(db_column='COUPON_TYPE', max_length=1)),
                ('group_coupon', models.IntegerField(db_column='GROUP_COUPON')),
                ('group_count', models.IntegerField(db_column='GROUP_COUNT')),
                ('date_type', models.CharField(db_column='DATE_TYPE', max_length=1)),
                ('start_date', models.CharField(blank=True, db_column='START_DATE', max_length=45, null=True)),
                ('end_date', models.CharField(blank=True, db_column='END_DATE', max_length=45, null=True)),
                ('limit_type', models.CharField(blank=True, db_column='LIMIT_TYPE', max_length=1, null=True)),
                ('limit_coupon', models.IntegerField(blank=True, db_column='LIMIT_COUPON', null=True)),
                ('regdate', models.CharField(db_column='REGDATE', max_length=50)),
            ],
            options={
                'db_table': 'IM_GROUP_COUPON',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImGwagiFile',
            fields=[
                ('file_key', models.AutoField(db_column='FILE_KEY', primary_key=True, serialize=False)),
                ('qz_type', models.CharField(blank=True, db_column='QZ_TYPE', max_length=45, null=True)),
                ('rtsp_url', models.CharField(blank=True, db_column='RTSP_URL', max_length=500, null=True)),
                ('file_url', models.CharField(blank=True, db_column='FILE_URL', max_length=500, null=True)),
                ('json_express', models.CharField(blank=True, db_column='JSON_EXPRESS', max_length=500, null=True)),
                ('json_action', models.CharField(blank=True, db_column='JSON_ACTION', max_length=500, null=True)),
                ('regdate', models.CharField(blank=True, db_column='REGDATE', max_length=45, null=True)),
            ],
            options={
                'db_table': 'IM_GWAGI_FILE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImGwagiFileSave',
            fields=[
                ('file_key', models.AutoField(db_column='FILE_KEY', primary_key=True, serialize=False)),
                ('qz_type', models.CharField(blank=True, db_column='QZ_TYPE', max_length=45, null=True)),
                ('rtsp_url', models.CharField(blank=True, db_column='RTSP_URL', max_length=500, null=True)),
                ('file_url', models.CharField(blank=True, db_column='FILE_URL', max_length=500, null=True)),
                ('json_express', models.CharField(blank=True, db_column='JSON_EXPRESS', max_length=500, null=True)),
                ('json_action', models.CharField(blank=True, db_column='JSON_ACTION', max_length=500, null=True)),
                ('regdate', models.CharField(blank=True, db_column='REGDATE', max_length=45, null=True)),
            ],
            options={
                'db_table': 'IM_GWAGI_FILE_SAVE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImGwagiFileSave2',
            fields=[
                ('file_key', models.AutoField(db_column='FILE_KEY', primary_key=True, serialize=False)),
                ('qz_type', models.CharField(blank=True, db_column='QZ_TYPE', max_length=45, null=True)),
                ('rtsp_url', models.CharField(blank=True, db_column='RTSP_URL', max_length=500, null=True)),
                ('file_url', models.CharField(blank=True, db_column='FILE_URL', max_length=500, null=True)),
                ('json_express', models.CharField(blank=True, db_column='JSON_EXPRESS', max_length=500, null=True)),
                ('json_action', models.CharField(blank=True, db_column='JSON_ACTION', max_length=500, null=True)),
                ('regdate', models.CharField(blank=True, db_column='REGDATE', max_length=45, null=True)),
            ],
            options={
                'db_table': 'IM_GWAGI_FILE_SAVE_2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImGwagiFileSave3',
            fields=[
                ('file_key', models.AutoField(db_column='FILE_KEY', primary_key=True, serialize=False)),
                ('qz_type', models.CharField(blank=True, db_column='QZ_TYPE', max_length=45, null=True)),
                ('rtsp_url', models.CharField(blank=True, db_column='RTSP_URL', max_length=500, null=True)),
                ('file_url', models.CharField(blank=True, db_column='FILE_URL', max_length=500, null=True)),
                ('json_express', models.CharField(blank=True, db_column='JSON_EXPRESS', max_length=500, null=True)),
                ('json_action', models.CharField(blank=True, db_column='JSON_ACTION', max_length=500, null=True)),
                ('regdate', models.CharField(blank=True, db_column='REGDATE', max_length=45, null=True)),
            ],
            options={
                'db_table': 'IM_GWAGI_FILE_SAVE_3',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImGwagiFileSave5',
            fields=[
                ('file_key', models.AutoField(db_column='FILE_KEY', primary_key=True, serialize=False)),
                ('qz_type', models.CharField(blank=True, db_column='QZ_TYPE', max_length=45, null=True)),
                ('rtsp_url', models.CharField(blank=True, db_column='RTSP_URL', max_length=500, null=True)),
                ('file_url', models.CharField(blank=True, db_column='FILE_URL', max_length=500, null=True)),
                ('json_express', models.CharField(blank=True, db_column='JSON_EXPRESS', max_length=500, null=True)),
                ('json_action', models.CharField(blank=True, db_column='JSON_ACTION', max_length=500, null=True)),
                ('regdate', models.CharField(blank=True, db_column='REGDATE', max_length=45, null=True)),
            ],
            options={
                'db_table': 'IM_GWAGI_FILE_SAVE_5',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImGwagiFileSave6',
            fields=[
                ('file_key', models.AutoField(db_column='FILE_KEY', primary_key=True, serialize=False)),
                ('qz_type', models.CharField(blank=True, db_column='QZ_TYPE', max_length=45, null=True)),
                ('rtsp_url', models.CharField(blank=True, db_column='RTSP_URL', max_length=500, null=True)),
                ('file_url', models.CharField(blank=True, db_column='FILE_URL', max_length=500, null=True)),
                ('json_express', models.CharField(blank=True, db_column='JSON_EXPRESS', max_length=500, null=True)),
                ('json_action', models.CharField(blank=True, db_column='JSON_ACTION', max_length=500, null=True)),
                ('regdate', models.CharField(blank=True, db_column='REGDATE', max_length=45, null=True)),
            ],
            options={
                'db_table': 'IM_GWAGI_FILE_SAVE_6',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImGwagiList',
            fields=[
                ('file_key', models.AutoField(db_column='FILE_KEY', primary_key=True, serialize=False)),
                ('file_type', models.CharField(db_column='FILE_TYPE', max_length=1)),
                ('file_url', models.CharField(blank=True, db_column='FILE_URL', max_length=500, null=True)),
                ('file_time', models.IntegerField(blank=True, db_column='FILE_TIME', null=True)),
            ],
            options={
                'db_table': 'IM_GWAGI_LIST',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImGwagiList0126',
            fields=[
                ('file_key', models.AutoField(db_column='FILE_KEY', primary_key=True, serialize=False)),
                ('file_type', models.CharField(db_column='FILE_TYPE', max_length=1)),
                ('file_url', models.CharField(blank=True, db_column='FILE_URL', max_length=500, null=True)),
                ('file_time', models.IntegerField(blank=True, db_column='FILE_TIME', null=True)),
            ],
            options={
                'db_table': 'IM_GWAGI_LIST_01_26',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImIapApple',
            fields=[
                ('apple_key', models.AutoField(db_column='APPLE_KEY', primary_key=True, serialize=False)),
                ('receipt_type', models.CharField(blank=True, db_column='RECEIPT_TYPE', max_length=100, null=True)),
                ('user_key', models.IntegerField(blank=True, db_column='USER_KEY', null=True)),
                ('product_id', models.CharField(blank=True, db_column='PRODUCT_ID', max_length=250, null=True)),
                ('transaction_id', models.CharField(blank=True, db_column='TRANSACTION_ID', max_length=100, null=True)),
                ('original_transaction_id', models.CharField(blank=True, db_column='ORIGINAL_TRANSACTION_ID', max_length=100, null=True)),
                ('purchase_data', models.CharField(blank=True, db_column='PURCHASE_DATA', max_length=100, null=True)),
                ('purchase_data_ms', models.CharField(blank=True, db_column='PURCHASE_DATA_MS', max_length=100, null=True)),
                ('purchase_date_pst', models.CharField(blank=True, db_column='PURCHASE_DATE_PST', max_length=100, null=True)),
                ('create_at', models.DateTimeField(blank=True, db_column='CREATE_AT', null=True)),
            ],
            options={
                'db_table': 'IM_IAP_APPLE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImIapProduct',
            fields=[
                ('product_key', models.AutoField(db_column='PRODUCT_KEY', primary_key=True, serialize=False)),
                ('product_id', models.CharField(blank=True, db_column='PRODUCT_ID', max_length=250, null=True)),
                ('product_name', models.CharField(blank=True, db_column='PRODUCT_NAME', max_length=250, null=True)),
                ('product_price', models.IntegerField(blank=True, db_column='PRODUCT_PRICE', null=True)),
            ],
            options={
                'db_table': 'IM_IAP_PRODUCT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImIapSubscribe',
            fields=[
                ('is_pk', models.AutoField(db_column='IS_PK', primary_key=True, serialize=False)),
                ('is_state', models.CharField(blank=True, db_column='IS_STATE', max_length=1, null=True)),
                ('user_key', models.IntegerField(db_column='USER_KEY')),
                ('expiration_date', models.CharField(blank=True, db_column='EXPIRATION_DATE', max_length=100, null=True)),
            ],
            options={
                'db_table': 'IM_IAP_SUBSCRIBE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImKcpResult',
            fields=[
                ('kcp_key', models.AutoField(db_column='KCP_KEY', primary_key=True, serialize=False)),
                ('user_key', models.IntegerField(blank=True, db_column='USER_KEY', null=True)),
                ('qz_group', models.IntegerField(blank=True, db_column='QZ_GROUP', null=True)),
                ('regdate', models.CharField(blank=True, db_column='REGDATE', max_length=100, null=True)),
            ],
            options={
                'db_table': 'IM_KCP_RESULT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImLogoFile',
            fields=[
                ('file_key', models.AutoField(db_column='FILE_KEY', primary_key=True, serialize=False)),
                ('file_fk', models.IntegerField(db_column='FILE_FK', unique=True)),
                ('file_url', models.CharField(blank=True, db_column='FILE_URL', max_length=250, null=True)),
                ('file_name', models.CharField(blank=True, db_column='FILE_NAME', max_length=250, null=True)),
                ('file_origin', models.CharField(blank=True, db_column='FILE_ORIGIN', max_length=250, null=True)),
                ('file_folder', models.CharField(blank=True, db_column='FILE_FOLDER', max_length=250, null=True)),
                ('file_size', models.IntegerField(blank=True, db_column='FILE_SIZE', null=True)),
            ],
            options={
                'db_table': 'IM_LOGO_FILE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImMtbi',
            fields=[
                ('mt_pk', models.AutoField(db_column='MT_PK', primary_key=True, serialize=False)),
                ('mt_page', models.IntegerField(blank=True, db_column='MT_PAGE', null=True)),
                ('mk_pk', models.IntegerField(blank=True, db_column='MK_PK', null=True)),
                ('mt_text', models.CharField(blank=True, db_column='MT_TEXT', max_length=50, null=True)),
            ],
            options={
                'db_table': 'IM_MTBI',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImMtbiBkData',
            fields=[
                ('md_pk', models.AutoField(db_column='MD_PK', primary_key=True, serialize=False)),
                ('qz_group', models.IntegerField(blank=True, db_column='QZ_GROUP', null=True)),
                ('qz_data', models.CharField(blank=True, db_column='QZ_DATA', max_length=10000, null=True)),
            ],
            options={
                'db_table': 'IM_MTBI_BK_DATA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImMtbiData',
            fields=[
                ('md_pk', models.AutoField(db_column='MD_PK', primary_key=True, serialize=False)),
                ('user_key', models.IntegerField(blank=True, db_column='USER_KEY', null=True)),
                ('qz_group', models.IntegerField(blank=True, db_column='QZ_GROUP', null=True)),
                ('mk_pk', models.IntegerField(blank=True, db_column='MK_PK', null=True)),
                ('mt_pick', models.IntegerField(blank=True, db_column='MT_PICK', null=True)),
            ],
            options={
                'db_table': 'IM_MTBI_DATA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImMtbiDataBk',
            fields=[
                ('md_pk', models.AutoField(db_column='MD_PK', primary_key=True, serialize=False)),
                ('user_key', models.IntegerField(blank=True, db_column='USER_KEY', null=True)),
                ('qz_group', models.IntegerField(blank=True, db_column='QZ_GROUP', null=True)),
                ('mk_pk', models.IntegerField(blank=True, db_column='MK_PK', null=True)),
                ('mt_pick', models.IntegerField(blank=True, db_column='MT_PICK', null=True)),
            ],
            options={
                'db_table': 'IM_MTBI_DATA_BK',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImMtbiJob',
            fields=[
                ('mj_pk', models.AutoField(db_column='MJ_PK', primary_key=True, serialize=False)),
                ('mj_type', models.IntegerField(blank=True, db_column='MJ_TYPE', null=True)),
                ('mk_pk', models.IntegerField(blank=True, db_column='MK_PK', null=True)),
                ('mj_score', models.IntegerField(blank=True, db_column='MJ_SCORE', null=True)),
                ('mj_job', models.CharField(blank=True, db_column='MJ_JOB', max_length=50, null=True)),
            ],
            options={
                'db_table': 'IM_MTBI_JOB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImMtbiJobEtc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mt_sheet', models.PositiveIntegerField(db_column='MT_SHEET')),
                ('mj_job', models.CharField(blank=True, db_column='MJ_JOB', max_length=50, null=True)),
                ('mj_job_sub', models.CharField(blank=True, db_column='MJ_JOB_SUB', max_length=50, null=True)),
            ],
            options={
                'db_table': 'IM_MTBI_JOB_ETC',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImMtbiKeyword',
            fields=[
                ('mk_pk', models.AutoField(db_column='MK_PK', primary_key=True, serialize=False)),
                ('mk_keyword', models.CharField(db_column='MK_KEYWORD', max_length=50)),
                ('op_pk', models.IntegerField(blank=True, db_column='OP_PK', null=True)),
                ('op_keyword', models.CharField(blank=True, db_column='OP_KEYWORD', max_length=50, null=True)),
            ],
            options={
                'db_table': 'IM_MTBI_KEYWORD',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImMtbiKpcTts',
            fields=[
                ('mt_pk', models.AutoField(db_column='MT_PK', primary_key=True, serialize=False)),
                ('mt_sheet', models.IntegerField(db_column='MT_SHEET')),
                ('mt_type', models.CharField(blank=True, db_column='MT_TYPE', max_length=1, null=True)),
                ('mt_tts', models.CharField(blank=True, db_column='MT_TTS', max_length=500, null=True)),
            ],
            options={
                'db_table': 'IM_MTBI_KPC_TTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImMtbiTts',
            fields=[
                ('mt_pk', models.AutoField(db_column='MT_PK', primary_key=True, serialize=False)),
                ('mt_sheet', models.IntegerField(db_column='MT_SHEET')),
                ('mt_type', models.CharField(blank=True, db_column='MT_TYPE', max_length=1, null=True)),
                ('mt_tts', models.CharField(blank=True, db_column='MT_TTS', max_length=500, null=True)),
            ],
            options={
                'db_table': 'IM_MTBI_TTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImNews',
            fields=[
                ('news_key', models.AutoField(db_column='NEWS_KEY', primary_key=True, serialize=False)),
                ('news_top', models.IntegerField(db_column='NEWS_TOP')),
                ('news_writer', models.CharField(db_column='NEWS_WRITER', max_length=45)),
                ('news_title', models.CharField(db_column='NEWS_TITLE', max_length=100)),
                ('news_text', models.CharField(db_column='NEWS_TEXT', max_length=2000)),
                ('regdate', models.CharField(db_column='REGDATE', max_length=45)),
            ],
            options={
                'db_table': 'IM_NEWS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImNewsFile',
            fields=[
                ('file_key', models.AutoField(db_column='FILE_KEY', primary_key=True, serialize=False)),
                ('file_fk', models.IntegerField(db_column='FILE_FK', unique=True)),
                ('file_url', models.CharField(blank=True, db_column='FILE_URL', max_length=250, null=True)),
                ('file_name', models.CharField(blank=True, db_column='FILE_NAME', max_length=250, null=True)),
                ('file_origin', models.CharField(blank=True, db_column='FILE_ORIGIN', max_length=250, null=True)),
                ('file_folder', models.CharField(blank=True, db_column='FILE_FOLDER', max_length=250, null=True)),
                ('file_size', models.IntegerField(blank=True, db_column='FILE_SIZE', null=True)),
            ],
            options={
                'db_table': 'IM_NEWS_FILE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImNotice',
            fields=[
                ('noti_key', models.AutoField(db_column='NOTI_KEY', primary_key=True, serialize=False)),
                ('noti_title', models.CharField(blank=True, db_column='NOTI_TITLE', max_length=100, null=True)),
                ('noti_text', models.CharField(blank=True, db_column='NOTI_TEXT', max_length=2000, null=True)),
                ('regdate', models.DateTimeField(db_column='REGDATE')),
            ],
            options={
                'db_table': 'IM_NOTICE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImPcError',
            fields=[
                ('error_key', models.AutoField(db_column='ERROR_KEY', primary_key=True, serialize=False)),
                ('user_key', models.IntegerField(blank=True, db_column='USER_KEY', null=True)),
                ('message', models.CharField(blank=True, db_column='MESSAGE', max_length=1000, null=True)),
                ('regdate', models.CharField(blank=True, db_column='REGDATE', max_length=100, null=True)),
            ],
            options={
                'db_table': 'IM_PC_ERROR',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImPiData',
            fields=[
                ('pi_key', models.AutoField(db_column='PI_KEY', primary_key=True, serialize=False)),
                ('file_key', models.IntegerField(blank=True, db_column='FILE_KEY', null=True)),
                ('user_key', models.IntegerField(blank=True, db_column='USER_KEY', null=True)),
                ('qz_group', models.IntegerField(blank=True, db_column='QZ_GROUP', null=True)),
                ('qz_type', models.CharField(blank=True, db_column='QZ_TYPE', max_length=45, null=True)),
                ('avg_angry', models.IntegerField(blank=True, db_column='AVG_ANGRY', null=True)),
                ('avg_happy', models.IntegerField(blank=True, db_column='AVG_HAPPY', null=True)),
                ('avg_normal', models.IntegerField(blank=True, db_column='AVG_NORMAL', null=True)),
                ('avg_sadness', models.IntegerField(blank=True, db_column='AVG_SADNESS', null=True)),
                ('avg_surprise', models.IntegerField(blank=True, db_column='AVG_SURPRISE', null=True)),
                ('avg_body', models.IntegerField(blank=True, db_column='AVG_BODY', null=True)),
                ('cnt_hand', models.IntegerField(blank=True, db_column='CNT_HAND', null=True)),
                ('avg_geze_pitch', models.FloatField(blank=True, db_column='AVG_GEZE_PITCH', null=True)),
                ('avg_geze_yaw', models.FloatField(blank=True, db_column='AVG_GEZE_YAW', null=True)),
                ('avg_geze_pitch_1', models.FloatField(blank=True, db_column='AVG_GEZE_PITCH_1', null=True)),
                ('avg_geze_yaw_1', models.FloatField(blank=True, db_column='AVG_GEZE_YAW_1', null=True)),
                ('avg_geze_pitch_2', models.FloatField(blank=True, db_column='AVG_GEZE_PITCH_2', null=True)),
                ('avg_geze_yaw_2', models.FloatField(blank=True, db_column='AVG_GEZE_YAW_2', null=True)),
                ('avg_geze_pitch_3', models.FloatField(blank=True, db_column='AVG_GEZE_PITCH_3', null=True)),
                ('avg_geze_yaw_3', models.FloatField(blank=True, db_column='AVG_GEZE_YAW_3', null=True)),
                ('avg_db', models.IntegerField(blank=True, db_column='AVG_DB', null=True)),
                ('avg_tone', models.IntegerField(blank=True, db_column='AVG_TONE', null=True)),
                ('avg_speed', models.FloatField(blank=True, db_column='AVG_SPEED', null=True)),
                ('score', models.FloatField(blank=True, db_column='SCORE', null=True)),
                ('magnitude', models.FloatField(blank=True, db_column='MAGNITUDE', null=True)),
                ('str', models.CharField(blank=True, db_column='STR', max_length=5000, null=True)),
                ('qz_tts', models.CharField(blank=True, db_column='QZ_TTS', max_length=1000, null=True)),
                ('regdate', models.CharField(blank=True, db_column='REGDATE', max_length=100, null=True)),
            ],
            options={
                'db_table': 'IM_PI_DATA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImPiDataBk',
            fields=[
                ('pi_key', models.AutoField(db_column='PI_KEY', primary_key=True, serialize=False)),
                ('file_key', models.IntegerField(blank=True, db_column='FILE_KEY', null=True)),
                ('user_key', models.IntegerField(blank=True, db_column='USER_KEY', null=True)),
                ('qz_group', models.IntegerField(blank=True, db_column='QZ_GROUP', null=True)),
                ('qz_type', models.CharField(blank=True, db_column='QZ_TYPE', max_length=45, null=True)),
                ('avg_angry', models.IntegerField(blank=True, db_column='AVG_ANGRY', null=True)),
                ('avg_happy', models.IntegerField(blank=True, db_column='AVG_HAPPY', null=True)),
                ('avg_normal', models.IntegerField(blank=True, db_column='AVG_NORMAL', null=True)),
                ('avg_sadness', models.IntegerField(blank=True, db_column='AVG_SADNESS', null=True)),
                ('avg_surprise', models.IntegerField(blank=True, db_column='AVG_SURPRISE', null=True)),
                ('avg_body', models.IntegerField(blank=True, db_column='AVG_BODY', null=True)),
                ('cnt_hand', models.IntegerField(blank=True, db_column='CNT_HAND', null=True)),
                ('avg_geze_pitch', models.FloatField(blank=True, db_column='AVG_GEZE_PITCH', null=True)),
                ('avg_geze_yaw', models.FloatField(blank=True, db_column='AVG_GEZE_YAW', null=True)),
                ('avg_geze_pitch_1', models.FloatField(blank=True, db_column='AVG_GEZE_PITCH_1', null=True)),
                ('avg_geze_yaw_1', models.FloatField(blank=True, db_column='AVG_GEZE_YAW_1', null=True)),
                ('avg_geze_pitch_2', models.FloatField(blank=True, db_column='AVG_GEZE_PITCH_2', null=True)),
                ('avg_geze_yaw_2', models.FloatField(blank=True, db_column='AVG_GEZE_YAW_2', null=True)),
                ('avg_geze_pitch_3', models.FloatField(blank=True, db_column='AVG_GEZE_PITCH_3', null=True)),
                ('avg_geze_yaw_3', models.FloatField(blank=True, db_column='AVG_GEZE_YAW_3', null=True)),
                ('avg_db', models.IntegerField(blank=True, db_column='AVG_DB', null=True)),
                ('avg_tone', models.IntegerField(blank=True, db_column='AVG_TONE', null=True)),
                ('avg_speed', models.FloatField(blank=True, db_column='AVG_SPEED', null=True)),
                ('score', models.FloatField(blank=True, db_column='SCORE', null=True)),
                ('magnitude', models.FloatField(blank=True, db_column='MAGNITUDE', null=True)),
                ('str', models.CharField(blank=True, db_column='STR', max_length=5000, null=True)),
                ('qz_tts', models.CharField(blank=True, db_column='QZ_TTS', max_length=1000, null=True)),
                ('regdate', models.CharField(blank=True, db_column='REGDATE', max_length=100, null=True)),
            ],
            options={
                'db_table': 'IM_PI_DATA_BK',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImPopData',
            fields=[
                ('pop_key', models.AutoField(db_column='POP_KEY', primary_key=True, serialize=False)),
                ('group_key', models.IntegerField(db_column='GROUP_KEY', unique=True)),
                ('pop_type', models.CharField(db_column='POP_TYPE', max_length=1)),
                ('pop_user', models.CharField(blank=True, db_column='POP_USER', max_length=50, null=True)),
                ('start_date', models.CharField(blank=True, db_column='START_DATE', max_length=50, null=True)),
                ('end_date', models.CharField(blank=True, db_column='END_DATE', max_length=50, null=True)),
                ('regdate', models.DateTimeField(db_column='REGDATE')),
            ],
            options={
                'db_table': 'IM_POP_DATA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImPopFile',
            fields=[
                ('file_key', models.AutoField(db_column='FILE_KEY', primary_key=True, serialize=False)),
                ('file_fk', models.IntegerField(db_column='FILE_FK', unique=True)),
                ('file_url', models.CharField(blank=True, db_column='FILE_URL', max_length=250, null=True)),
                ('file_name', models.CharField(blank=True, db_column='FILE_NAME', max_length=250, null=True)),
                ('file_origin', models.CharField(blank=True, db_column='FILE_ORIGIN', max_length=250, null=True)),
                ('file_folder', models.CharField(blank=True, db_column='FILE_FOLDER', max_length=250, null=True)),
                ('file_size', models.IntegerField(blank=True, db_column='FILE_SIZE', null=True)),
            ],
            options={
                'db_table': 'IM_POP_FILE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImPracticeTts',
            fields=[
                ('pr_pk', models.AutoField(db_column='PR_PK', primary_key=True, serialize=False)),
                ('pr_tts', models.CharField(blank=True, db_column='PR_TTS', max_length=500, null=True)),
            ],
            options={
                'db_table': 'IM_PRACTICE_TTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImQuiry',
            fields=[
                ('quiry_seq', models.AutoField(db_column='QUIRY_SEQ', primary_key=True, serialize=False)),
                ('quiry_key', models.IntegerField(blank=True, db_column='QUIRY_KEY', null=True)),
                ('quiry_title', models.CharField(blank=True, db_column='QUIRY_TITLE', max_length=250, null=True)),
                ('quiry_text', models.CharField(db_column='QUIRY_TEXT', max_length=2000)),
                ('regdate', models.CharField(blank=True, db_column='REGDATE', max_length=45, null=True)),
                ('ans_name', models.CharField(blank=True, db_column='ANS_NAME', max_length=45, null=True)),
                ('ans_text', models.CharField(blank=True, db_column='ANS_TEXT', max_length=2000, null=True)),
                ('ans_type', models.CharField(blank=True, db_column='ANS_TYPE', max_length=10, null=True)),
                ('ansdate', models.CharField(blank=True, db_column='ANSDATE', max_length=45, null=True)),
            ],
            options={
                'db_table': 'IM_QUIRY',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImQzBasic',
            fields=[
                ('qz_code', models.AutoField(db_column='QZ_CODE', primary_key=True, serialize=False)),
                ('qz_tts', models.CharField(blank=True, db_column='QZ_TTS', max_length=250, null=True)),
                ('qz_time', models.CharField(db_column='QZ_TIME', max_length=45)),
            ],
            options={
                'db_table': 'IM_QZ_BASIC',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImQzChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qz_code', models.IntegerField(db_column='QZ_CODE')),
                ('qz_def', models.IntegerField(db_column='QZ_DEF')),
                ('qz_title', models.CharField(db_column='QZ_TITLE', max_length=250)),
            ],
            options={
                'db_table': 'IM_QZ_CHOICE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImQzDepth',
            fields=[
                ('qz_code', models.AutoField(db_column='QZ_CODE', primary_key=True, serialize=False)),
                ('qz_num', models.CharField(db_column='QZ_NUM', max_length=45)),
                ('qz_tts', models.CharField(blank=True, db_column='QZ_TTS', max_length=500, null=True)),
                ('qz_time', models.CharField(db_column='QZ_TIME', max_length=45)),
            ],
            options={
                'db_table': 'IM_QZ_DEPTH',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImQzFile',
            fields=[
                ('file_key', models.AutoField(db_column='FILE_KEY', primary_key=True, serialize=False)),
                ('qz_group', models.IntegerField(blank=True, db_column='QZ_GROUP', null=True)),
                ('qz_platform', models.IntegerField(blank=True, db_column='QZ_PLATFORM', null=True)),
                ('user_key', models.IntegerField(blank=True, db_column='USER_KEY', null=True)),
                ('qz_num', models.IntegerField(blank=True, db_column='QZ_NUM', null=True)),
                ('qz_type', models.CharField(blank=True, db_column='QZ_TYPE', max_length=45, null=True)),
                ('group_code', models.IntegerField(blank=True, db_column='GROUP_CODE', null=True)),
                ('rtsp_url', models.CharField(blank=True, db_column='RTSP_URL', max_length=500, null=True)),
                ('file_url', models.CharField(blank=True, db_column='FILE_URL', max_length=500, null=True)),
                ('json_express', models.CharField(blank=True, db_column='JSON_EXPRESS', max_length=500, null=True)),
                ('json_action', models.CharField(blank=True, db_column='JSON_ACTION', max_length=500, null=True)),
                ('json_tone', models.CharField(blank=True, db_column='JSON_TONE', max_length=500, null=True)),
                ('json_db', models.CharField(blank=True, db_column='JSON_DB', max_length=500, null=True)),
                ('json_speed', models.CharField(blank=True, db_column='JSON_SPEED', max_length=500, null=True)),
                ('thum_url', models.CharField(blank=True, db_column='THUM_URL', max_length=500, null=True)),
                ('regdate', models.CharField(blank=True, db_column='REGDATE', max_length=45, null=True)),
                ('qz_org_tts', models.CharField(blank=True, db_column='QZ_ORG_TTS', max_length=1000, null=True)),
            ],
            options={
                'db_table': 'IM_QZ_FILE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImQzFileBk',
            fields=[
                ('file_key', models.AutoField(db_column='FILE_KEY', primary_key=True, serialize=False)),
                ('qz_group', models.IntegerField(blank=True, db_column='QZ_GROUP', null=True)),
                ('qz_platform', models.IntegerField(blank=True, db_column='QZ_PLATFORM', null=True)),
                ('user_key', models.IntegerField(blank=True, db_column='USER_KEY', null=True)),
                ('qz_num', models.IntegerField(blank=True, db_column='QZ_NUM', null=True)),
                ('qz_type', models.CharField(blank=True, db_column='QZ_TYPE', max_length=45, null=True)),
                ('group_code', models.IntegerField(blank=True, db_column='GROUP_CODE', null=True)),
                ('rtsp_url', models.CharField(blank=True, db_column='RTSP_URL', max_length=500, null=True)),
                ('file_url', models.CharField(blank=True, db_column='FILE_URL', max_length=500, null=True)),
                ('json_express', models.CharField(blank=True, db_column='JSON_EXPRESS', max_length=500, null=True)),
                ('json_action', models.CharField(blank=True, db_column='JSON_ACTION', max_length=500, null=True)),
                ('json_tone', models.CharField(blank=True, db_column='JSON_TONE', max_length=500, null=True)),
                ('json_db', models.CharField(blank=True, db_column='JSON_DB', max_length=500, null=True)),
                ('json_speed', models.CharField(blank=True, db_column='JSON_SPEED', max_length=500, null=True)),
                ('thum_url', models.CharField(blank=True, db_column='THUM_URL', max_length=500, null=True)),
                ('regdate', models.CharField(blank=True, db_column='REGDATE', max_length=45, null=True)),
                ('qz_org_tts', models.CharField(blank=True, db_column='QZ_ORG_TTS', max_length=1000, null=True)),
            ],
            options={
                'db_table': 'IM_QZ_FILE_BK',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImQzFitness',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qz_group', models.IntegerField(blank=True, db_column='QZ_GROUP', null=True, unique=True)),
                ('qz_fitness', models.CharField(blank=True, db_column='QZ_FITNESS', max_length=50, null=True)),
            ],
            options={
                'db_table': 'IM_QZ_FITNESS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImQzGroup',
            fields=[
                ('qz_group', models.AutoField(db_column='QZ_GROUP', primary_key=True, serialize=False)),
                ('user_key', models.IntegerField(db_column='USER_KEY')),
                ('regdate', models.DateTimeField(blank=True, db_column='REGDATE', null=True)),
            ],
            options={
                'db_table': 'IM_QZ_GROUP',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImQzGroupEtc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qz_group', models.IntegerField(db_column='QZ_GROUP', unique=True)),
                ('user_key', models.IntegerField(db_column='USER_KEY')),
                ('origin_job_family', models.CharField(db_column='ORIGIN_JOB_FAMILY', max_length=45)),
                ('origin_job_sub', models.CharField(db_column='ORIGIN_JOB_SUB', max_length=45)),
            ],
            options={
                'db_table': 'IM_QZ_GROUP_ETC',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImQzKeyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qz_code', models.IntegerField(blank=True, db_column='QZ_CODE', null=True, unique=True)),
                ('qz_eye', models.CharField(blank=True, db_column='QZ_EYE', max_length=50, null=True)),
                ('qz_body', models.CharField(blank=True, db_column='QZ_BODY', max_length=50, null=True)),
                ('qz_face', models.CharField(blank=True, db_column='QZ_FACE', max_length=50, null=True)),
                ('qz_db', models.CharField(blank=True, db_column='QZ_DB', max_length=50, null=True)),
                ('qz_tone', models.CharField(blank=True, db_column='QZ_TONE', max_length=50, null=True)),
                ('qz_speed', models.CharField(blank=True, db_column='QZ_SPEED', max_length=50, null=True)),
            ],
            options={
                'db_table': 'IM_QZ_KEYWORD',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImQzKeywordSub',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qz_code', models.IntegerField(blank=True, db_column='QZ_CODE', null=True, unique=True)),
                ('qz_keyword', models.CharField(blank=True, db_column='QZ_KEYWORD', max_length=50, null=True)),
            ],
            options={
                'db_table': 'IM_QZ_KEYWORD_SUB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImQzKeywordText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qz_code', models.IntegerField(blank=True, db_column='QZ_CODE', null=True, unique=True)),
                ('qz_eye', models.CharField(blank=True, db_column='QZ_EYE', max_length=50, null=True)),
                ('qz_body', models.CharField(blank=True, db_column='QZ_BODY', max_length=50, null=True)),
                ('qz_face', models.CharField(blank=True, db_column='QZ_FACE', max_length=50, null=True)),
                ('qz_db', models.CharField(blank=True, db_column='QZ_DB', max_length=50, null=True)),
                ('qz_tone', models.CharField(blank=True, db_column='QZ_TONE', max_length=50, null=True)),
                ('qz_speed', models.CharField(blank=True, db_column='QZ_SPEED', max_length=50, null=True)),
            ],
            options={
                'db_table': 'IM_QZ_KEYWORD_TEXT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImQzMatter',
            fields=[
                ('qz_code', models.AutoField(db_column='QZ_CODE', primary_key=True, serialize=False)),
                ('qz_num', models.CharField(db_column='QZ_NUM', max_length=45)),
                ('qz_tts', models.CharField(blank=True, db_column='QZ_TTS', max_length=250, null=True)),
                ('qz_time', models.CharField(db_column='QZ_TIME', max_length=45)),
            ],
            options={
                'db_table': 'IM_QZ_MATTER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImQzMtbiData',
            fields=[
                ('no', models.AutoField(primary_key=True, serialize=False)),
                ('qz_group', models.IntegerField(blank=True, db_column='QZ_GROUP', null=True, unique=True)),
                ('qz_1st', models.CharField(blank=True, db_column='QZ_1ST', max_length=50, null=True)),
                ('qz_1st_score', models.IntegerField(blank=True, db_column='QZ_1ST_SCORE', null=True)),
                ('qz_2nd', models.CharField(blank=True, db_column='QZ_2ND', max_length=50, null=True)),
                ('qz_2nd_score', models.IntegerField(blank=True, db_column='QZ_2ND_SCORE', null=True)),
            ],
            options={
                'db_table': 'IM_QZ_MTBI_DATA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImQzName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qz_num', models.IntegerField(blank=True, db_column='QZ_NUM', null=True, unique=True)),
                ('qz_name', models.CharField(blank=True, db_column='QZ_NAME', max_length=50, null=True)),
            ],
            options={
                'db_table': 'IM_QZ_NAME',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImQzQu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qz_code', models.IntegerField(blank=True, db_column='QZ_CODE', null=True)),
                ('qz_name', models.CharField(blank=True, db_column='QZ_NAME', max_length=50, null=True)),
            ],
            options={
                'db_table': 'IM_QZ_QU',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImQzTitle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qz_code', models.IntegerField(blank=True, db_column='QZ_CODE', null=True, unique=True)),
                ('qz_title', models.CharField(blank=True, db_column='QZ_TITLE', max_length=100, null=True)),
            ],
            options={
                'db_table': 'IM_QZ_TITLE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImQzTts',
            fields=[
                ('qz_code', models.AutoField(db_column='QZ_CODE', primary_key=True, serialize=False)),
                ('qz_def', models.CharField(blank=True, db_column='QZ_DEF', max_length=100, null=True)),
                ('qz_tts', models.CharField(blank=True, db_column='QZ_TTS', max_length=250, null=True)),
                ('tts_url', models.CharField(blank=True, db_column='TTS_URL', max_length=250, null=True)),
            ],
            options={
                'db_table': 'IM_QZ_TTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImQzTtsCsv',
            fields=[
                ('qz_code', models.AutoField(db_column='QZ_CODE', primary_key=True, serialize=False)),
                ('qz_tts', models.CharField(blank=True, db_column='QZ_TTS', max_length=250, null=True)),
                ('qz_time', models.CharField(db_column='QZ_TIME', max_length=45)),
            ],
            options={
                'db_table': 'IM_QZ_TTS_CSV',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImQzWord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qz_code', models.IntegerField(blank=True, db_column='QZ_CODE', null=True, unique=True)),
                ('qz_text', models.CharField(blank=True, db_column='QZ_TEXT', max_length=50, null=True)),
            ],
            options={
                'db_table': 'IM_QZ_WORD',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImQzZacad',
            fields=[
                ('za_key', models.AutoField(db_column='ZA_KEY', primary_key=True, serialize=False)),
                ('qz_group', models.IntegerField(db_column='QZ_GROUP', unique=True)),
                ('za_tts2', models.CharField(blank=True, db_column='ZA_TTS2', max_length=1000, null=True)),
                ('za_datetime', models.DateTimeField(blank=True, db_column='ZA_DATETIME', null=True)),
            ],
            options={
                'db_table': 'IM_QZ_ZACAD',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImQzZacadTts2',
            fields=[
                ('qz_code', models.AutoField(db_column='QZ_CODE', primary_key=True, serialize=False)),
                ('za_code', models.IntegerField(db_column='ZA_CODE')),
                ('za_tts2', models.CharField(db_column='ZA_TTS2', max_length=250)),
                ('za_tts3', models.CharField(db_column='ZA_TTS3', max_length=250)),
            ],
            options={
                'db_table': 'IM_QZ_ZACAD_TTS2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImTestData',
            fields=[
                ('data_key', models.AutoField(db_column='DATA_KEY', primary_key=True, serialize=False)),
                ('user_type', models.CharField(blank=True, db_column='USER_TYPE', max_length=45, null=True)),
                ('file_name', models.CharField(blank=True, db_column='FILE_NAME', max_length=100, null=True)),
                ('emotion', models.CharField(blank=True, db_column='EMOTION', max_length=100, null=True)),
            ],
            options={
                'db_table': 'IM_TEST_DATA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImUnvi',
            fields=[
                ('unvi_key', models.AutoField(db_column='UNVI_KEY', primary_key=True, serialize=False)),
                ('unvi_name', models.CharField(blank=True, db_column='UNVI_NAME', max_length=45, null=True)),
            ],
            options={
                'db_table': 'IM_UNVI',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImUnviStudent',
            fields=[
                ('student_key', models.AutoField(db_column='STUDENT_KEY', primary_key=True, serialize=False)),
                ('user_group', models.IntegerField(blank=True, db_column='USER_GROUP', null=True)),
                ('school_code', models.IntegerField(blank=True, db_column='SCHOOL_CODE', null=True)),
                ('student_class', models.CharField(blank=True, db_column='STUDENT_CLASS', max_length=45, null=True)),
                ('student_name', models.CharField(blank=True, db_column='STUDENT_NAME', max_length=45, null=True)),
                ('student_id', models.CharField(blank=True, db_column='STUDENT_ID', max_length=250, null=True)),
                ('regdate', models.CharField(blank=True, db_column='REGDATE', max_length=45, null=True)),
            ],
            options={
                'db_table': 'IM_UNVI_STUDENT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImUnviStudy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unvi_fk', models.IntegerField(blank=True, db_column='UNVI_FK', null=True)),
                ('unvi_study', models.CharField(blank=True, db_column='UNVI_STUDY', max_length=45, null=True)),
            ],
            options={
                'db_table': 'IM_UNVI_STUDY',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImUser',
            fields=[
                ('user_key', models.AutoField(db_column='USER_KEY', primary_key=True, serialize=False)),
                ('user_code', models.IntegerField(blank=True, db_column='USER_CODE', null=True)),
                ('user_group', models.IntegerField(blank=True, db_column='USER_GROUP', null=True)),
                ('status', models.CharField(db_column='STATUS', max_length=10)),
                ('user_type', models.CharField(blank=True, db_column='USER_TYPE', max_length=10, null=True)),
                ('user_coupon', models.IntegerField(blank=True, db_column='USER_COUPON', null=True)),
                ('user_id', models.CharField(db_column='USER_ID', max_length=250)),
                ('user_pwd', models.CharField(blank=True, db_column='USER_PWD', max_length=100, null=True)),
                ('user_name', models.CharField(blank=True, db_column='USER_NAME', max_length=100, null=True)),
                ('user_email', models.CharField(blank=True, db_column='USER_EMAIL', max_length=100, null=True)),
                ('user_age', models.CharField(blank=True, db_column='USER_AGE', max_length=100, null=True)),
                ('user_sex', models.CharField(blank=True, db_column='USER_SEX', max_length=100, null=True)),
                ('regdate', models.CharField(blank=True, db_column='REGDATE', max_length=100, null=True)),
                ('zg_id', models.CharField(blank=True, db_column='ZG_ID', max_length=250, null=True)),
                ('user_uuid', models.CharField(blank=True, db_column='USER_UUID', max_length=250, null=True, unique=True)),
                ('push_key', models.CharField(blank=True, db_column='PUSH_KEY', max_length=250, null=True)),
                ('temp_id', models.CharField(blank=True, db_column='TEMP_ID', max_length=100, null=True)),
                ('recomm_id', models.CharField(blank=True, db_column='RECOMM_ID', max_length=100, null=True)),
                ('large_scale', models.CharField(blank=True, db_column='LARGE_SCALE', max_length=45, null=True)),
                ('medium_scale', models.CharField(blank=True, db_column='MEDIUM_SCALE', max_length=45, null=True)),
                ('student_id', models.CharField(blank=True, db_column='STUDENT_ID', max_length=250, null=True)),
                ('job_family', models.CharField(blank=True, db_column='JOB_FAMILY', max_length=45, null=True)),
                ('job_sub', models.CharField(blank=True, db_column='JOB_SUB', max_length=45, null=True)),
                ('kpc_id', models.CharField(blank=True, db_column='KPC_ID', max_length=45, null=True)),
                ('biz_group', models.IntegerField(blank=True, db_column='BIZ_GROUP', null=True)),
            ],
            options={
                'db_table': 'IM_USER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImUserBiz',
            fields=[
                ('kpc_key', models.AutoField(db_column='KPC_KEY', primary_key=True, serialize=False)),
                ('qz_group', models.IntegerField(blank=True, db_column='QZ_GROUP', null=True)),
                ('kpc_id', models.CharField(blank=True, db_column='KPC_ID', max_length=45, null=True)),
            ],
            options={
                'db_table': 'IM_USER_BIZ',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImUserCouponPay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_key', models.IntegerField(db_column='USER_KEY')),
                ('user_coupon', models.IntegerField(db_column='USER_COUPON')),
                ('regdate', models.CharField(blank=True, db_column='REGDATE', max_length=250, null=True)),
            ],
            options={
                'db_table': 'IM_USER_COUPON_PAY',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImUserKpcData',
            fields=[
                ('kpc_key', models.AutoField(db_column='KPC_KEY', primary_key=True, serialize=False)),
                ('qz_group', models.IntegerField(blank=True, db_column='QZ_GROUP', null=True)),
                ('kpc_id', models.CharField(blank=True, db_column='KPC_ID', max_length=45, null=True)),
                ('job_sub', models.CharField(blank=True, db_column='JOB_SUB', max_length=45, null=True)),
                ('user_name', models.CharField(blank=True, db_column='USER_NAME', max_length=100, null=True)),
                ('user_age', models.CharField(blank=True, db_column='USER_AGE', max_length=100, null=True)),
                ('user_sex', models.CharField(blank=True, db_column='USER_SEX', max_length=45, null=True)),
                ('user_id', models.CharField(blank=True, db_column='USER_ID', max_length=250, null=True)),
                ('user_email', models.CharField(blank=True, db_column='USER_EMAIL', max_length=100, null=True)),
            ],
            options={
                'db_table': 'IM_USER_KPC_DATA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImUserKpcData2Nd',
            fields=[
                ('kpc_key', models.AutoField(db_column='KPC_KEY', primary_key=True, serialize=False)),
                ('qz_group', models.IntegerField(blank=True, db_column='QZ_GROUP', null=True)),
                ('kpc_id', models.CharField(blank=True, db_column='KPC_ID', max_length=45, null=True)),
                ('job_sub', models.CharField(blank=True, db_column='JOB_SUB', max_length=45, null=True)),
                ('user_name', models.CharField(blank=True, db_column='USER_NAME', max_length=100, null=True)),
                ('user_age', models.CharField(blank=True, db_column='USER_AGE', max_length=100, null=True)),
                ('user_sex', models.CharField(blank=True, db_column='USER_SEX', max_length=45, null=True)),
                ('user_id', models.CharField(blank=True, db_column='USER_ID', max_length=250, null=True)),
                ('user_email', models.CharField(blank=True, db_column='USER_EMAIL', max_length=100, null=True)),
            ],
            options={
                'db_table': 'IM_USER_KPC_DATA_2ND',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImUserKpcData3Nd',
            fields=[
                ('kpc_key', models.AutoField(db_column='KPC_KEY', primary_key=True, serialize=False)),
                ('qz_group', models.IntegerField(blank=True, db_column='QZ_GROUP', null=True)),
                ('kpc_id', models.CharField(blank=True, db_column='KPC_ID', max_length=45, null=True)),
                ('job_sub', models.CharField(blank=True, db_column='JOB_SUB', max_length=45, null=True)),
                ('user_name', models.CharField(blank=True, db_column='USER_NAME', max_length=100, null=True)),
                ('user_age', models.CharField(blank=True, db_column='USER_AGE', max_length=100, null=True)),
                ('user_sex', models.CharField(blank=True, db_column='USER_SEX', max_length=45, null=True)),
                ('user_id', models.CharField(blank=True, db_column='USER_ID', max_length=250, null=True)),
                ('user_email', models.CharField(blank=True, db_column='USER_EMAIL', max_length=100, null=True)),
            ],
            options={
                'db_table': 'IM_USER_KPC_DATA_3ND',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImUserKpcDay',
            fields=[
                ('day_key', models.AutoField(db_column='DAY_KEY', primary_key=True, serialize=False)),
                ('start_date', models.CharField(blank=True, db_column='START_DATE', max_length=45, null=True)),
            ],
            options={
                'db_table': 'IM_USER_KPC_DAY',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImUserKpcType',
            fields=[
                ('kpc_pk', models.AutoField(db_column='KPC_PK', primary_key=True, serialize=False)),
                ('kpc_type', models.CharField(blank=True, db_column='KPC_TYPE', max_length=45, null=True)),
            ],
            options={
                'db_table': 'IM_USER_KPC_TYPE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImVersion',
            fields=[
                ('app_key', models.AutoField(db_column='APP_KEY', primary_key=True, serialize=False)),
                ('app_type', models.IntegerField(db_column='APP_TYPE')),
                ('os', models.CharField(blank=True, db_column='OS', max_length=100, null=True)),
                ('user_name', models.CharField(blank=True, db_column='USER_NAME', max_length=100, null=True)),
                ('version', models.CharField(blank=True, db_column='VERSION', max_length=100, null=True)),
                ('str', models.CharField(blank=True, db_column='STR', max_length=500, null=True)),
                ('regdate', models.CharField(blank=True, db_column='REGDATE', max_length=50, null=True)),
            ],
            options={
                'db_table': 'IM_VERSION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImZgData',
            fields=[
                ('zg_key', models.AutoField(db_column='ZG_KEY', primary_key=True, serialize=False)),
                ('user_key', models.IntegerField(db_column='USER_KEY')),
                ('zg_type', models.CharField(blank=True, db_column='ZG_TYPE', max_length=45, null=True)),
                ('zg_rtsp_url', models.CharField(blank=True, db_column='ZG_RTSP_URL', max_length=500, null=True)),
                ('zg_file_url', models.CharField(blank=True, db_column='ZG_FILE_URL', max_length=500, null=True)),
                ('zg_angry', models.IntegerField(blank=True, db_column='ZG_ANGRY', null=True)),
                ('zg_happy', models.IntegerField(blank=True, db_column='ZG_HAPPY', null=True)),
                ('zg_normal', models.IntegerField(blank=True, db_column='ZG_NORMAL', null=True)),
                ('zg_sadness', models.IntegerField(blank=True, db_column='ZG_SADNESS', null=True)),
                ('zg_surprise', models.IntegerField(blank=True, db_column='ZG_SURPRISE', null=True)),
                ('zg_geze_pitch', models.FloatField(blank=True, db_column='ZG_GEZE_PITCH', null=True)),
                ('zg_geze_yaw', models.FloatField(blank=True, db_column='ZG_GEZE_YAW', null=True)),
                ('zg_body', models.IntegerField(blank=True, db_column='ZG_BODY', null=True)),
                ('zg_hand', models.IntegerField(blank=True, db_column='ZG_HAND', null=True)),
                ('zg_db', models.IntegerField(blank=True, db_column='ZG_DB', null=True)),
                ('zg_tone', models.IntegerField(blank=True, db_column='ZG_TONE', null=True)),
                ('zg_speed', models.FloatField(blank=True, db_column='ZG_SPEED', null=True)),
                ('score', models.FloatField(blank=True, db_column='SCORE', null=True)),
                ('magnitude', models.FloatField(blank=True, db_column='MAGNITUDE', null=True)),
                ('str', models.CharField(blank=True, db_column='STR', max_length=5000, null=True)),
                ('regdate', models.CharField(blank=True, db_column='REGDATE', max_length=45, null=True)),
            ],
            options={
                'db_table': 'IM_ZG_DATA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImZgGroup',
            fields=[
                ('zg_group', models.AutoField(db_column='ZG_GROUP', primary_key=True, serialize=False)),
                ('user_key', models.IntegerField(db_column='USER_KEY')),
                ('regdate', models.DateTimeField(blank=True, db_column='REGDATE', null=True)),
            ],
            options={
                'db_table': 'IM_ZG_GROUP',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImZgJobFair',
            fields=[
                ('job_pk', models.AutoField(db_column='JOB_PK', primary_key=True, serialize=False)),
                ('qz_group', models.IntegerField(db_column='QZ_GROUP')),
                ('job_fair', models.CharField(blank=True, db_column='JOB_FAIR', max_length=100, null=True)),
            ],
            options={
                'db_table': 'IM_ZG_JOB_FAIR',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImZgUser',
            fields=[
                ('user_key', models.AutoField(db_column='USER_KEY', primary_key=True, serialize=False)),
                ('user_id', models.CharField(db_column='USER_ID', max_length=100, unique=True)),
                ('user_name', models.CharField(db_column='USER_NAME', max_length=50)),
                ('user_age', models.CharField(db_column='USER_AGE', max_length=50)),
                ('user_sex', models.CharField(db_column='USER_SEX', max_length=50)),
                ('job_family', models.CharField(db_column='JOB_FAMILY', max_length=50)),
                ('job_sub', models.CharField(db_column='JOB_SUB', max_length=50)),
                ('regdate', models.CharField(db_column='REGDATE', max_length=45)),
                ('user_edu', models.CharField(blank=True, db_column='USER_EDU', max_length=50, null=True)),
                ('user_crr', models.CharField(blank=True, db_column='USER_CRR', max_length=50, null=True)),
                ('user_anl', models.CharField(blank=True, db_column='USER_ANL', max_length=50, null=True)),
                ('user_crt', models.CharField(blank=True, db_column='USER_CRT', max_length=1000, null=True)),
                ('user_lng', models.CharField(blank=True, db_column='USER_LNG', max_length=50, null=True)),
                ('user_dty', models.CharField(blank=True, db_column='USER_DTY', max_length=1000, null=True)),
                ('user_loc', models.CharField(blank=True, db_column='USER_LOC', max_length=1000, null=True)),
            ],
            options={
                'db_table': 'IM_ZG_USER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImZgUserEtc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_key', models.IntegerField(db_column='USER_KEY', unique=True)),
                ('job_fair', models.CharField(db_column='JOB_FAIR', max_length=100)),
                ('user_edu', models.CharField(blank=True, db_column='USER_EDU', max_length=50, null=True)),
                ('user_crr', models.CharField(blank=True, db_column='USER_CRR', max_length=50, null=True)),
                ('user_anl', models.CharField(blank=True, db_column='USER_ANL', max_length=50, null=True)),
                ('user_crt', models.CharField(blank=True, db_column='USER_CRT', max_length=1000, null=True)),
                ('user_lng', models.CharField(blank=True, db_column='USER_LNG', max_length=50, null=True)),
                ('user_dty', models.CharField(blank=True, db_column='USER_DTY', max_length=1000, null=True)),
                ('user_loc', models.CharField(blank=True, db_column='USER_LOC', max_length=1000, null=True)),
            ],
            options={
                'db_table': 'IM_ZG_USER_ETC',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='JbTest',
            fields=[
                ('user_key', models.AutoField(db_column='USER_KEY', primary_key=True, serialize=False)),
                ('user_id', models.CharField(blank=True, db_column='USER_ID', max_length=100, null=True)),
                ('user_name', models.CharField(blank=True, db_column='USER_NAME', max_length=250, null=True)),
            ],
            options={
                'db_table': 'JB_TEST',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PmaBookmark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dbase', models.CharField(max_length=255)),
                ('user', models.CharField(max_length=255)),
                ('label', models.CharField(max_length=255)),
                ('query', models.TextField()),
            ],
            options={
                'db_table': 'pma__bookmark',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PmaCentralColumns',
            fields=[
                ('db_name', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('col_name', models.CharField(max_length=64)),
                ('col_type', models.CharField(max_length=64)),
                ('col_length', models.TextField(blank=True, null=True)),
                ('col_collation', models.CharField(max_length=64)),
                ('col_isnull', models.IntegerField(db_column='col_isNull')),
                ('col_extra', models.CharField(blank=True, max_length=255, null=True)),
                ('col_default', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pma__central_columns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PmaColumnInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('db_name', models.CharField(max_length=64)),
                ('table_name', models.CharField(max_length=64)),
                ('column_name', models.CharField(max_length=64)),
                ('comment', models.CharField(max_length=255)),
                ('mimetype', models.CharField(max_length=255)),
                ('transformation', models.CharField(max_length=255)),
                ('transformation_options', models.CharField(max_length=255)),
                ('input_transformation', models.CharField(max_length=255)),
                ('input_transformation_options', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'pma__column_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PmaDesignerSettings',
            fields=[
                ('username', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('settings_data', models.TextField()),
            ],
            options={
                'db_table': 'pma__designer_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PmaExportTemplates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=64)),
                ('export_type', models.CharField(max_length=10)),
                ('template_name', models.CharField(max_length=64)),
                ('template_data', models.TextField()),
            ],
            options={
                'db_table': 'pma__export_templates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PmaFavorite',
            fields=[
                ('username', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('tables', models.TextField()),
            ],
            options={
                'db_table': 'pma__favorite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PmaHistory',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=64)),
                ('db', models.CharField(max_length=64)),
                ('table', models.CharField(max_length=64)),
                ('timevalue', models.DateTimeField()),
                ('sqlquery', models.TextField()),
            ],
            options={
                'db_table': 'pma__history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PmaNavigationhiding',
            fields=[
                ('username', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('item_name', models.CharField(max_length=64)),
                ('item_type', models.CharField(max_length=64)),
                ('db_name', models.CharField(max_length=64)),
                ('table_name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'pma__navigationhiding',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PmaPdfPages',
            fields=[
                ('db_name', models.CharField(max_length=64)),
                ('page_nr', models.AutoField(primary_key=True, serialize=False)),
                ('page_descr', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'pma__pdf_pages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PmaRecent',
            fields=[
                ('username', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('tables', models.TextField()),
            ],
            options={
                'db_table': 'pma__recent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PmaRelation',
            fields=[
                ('master_db', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('master_table', models.CharField(max_length=64)),
                ('master_field', models.CharField(max_length=64)),
                ('foreign_db', models.CharField(max_length=64)),
                ('foreign_table', models.CharField(max_length=64)),
                ('foreign_field', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'pma__relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PmaSavedsearches',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=64)),
                ('db_name', models.CharField(max_length=64)),
                ('search_name', models.CharField(max_length=64)),
                ('search_data', models.TextField()),
            ],
            options={
                'db_table': 'pma__savedsearches',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PmaTableCoords',
            fields=[
                ('db_name', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('table_name', models.CharField(max_length=64)),
                ('pdf_page_number', models.IntegerField()),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
            ],
            options={
                'db_table': 'pma__table_coords',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PmaTableInfo',
            fields=[
                ('db_name', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('table_name', models.CharField(max_length=64)),
                ('display_field', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'pma__table_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PmaTableUiprefs',
            fields=[
                ('username', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('db_name', models.CharField(max_length=64)),
                ('table_name', models.CharField(max_length=64)),
                ('prefs', models.TextField()),
                ('last_update', models.DateTimeField()),
            ],
            options={
                'db_table': 'pma__table_uiprefs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PmaTracking',
            fields=[
                ('db_name', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('table_name', models.CharField(max_length=64)),
                ('version', models.PositiveIntegerField()),
                ('date_created', models.DateTimeField()),
                ('date_updated', models.DateTimeField()),
                ('schema_snapshot', models.TextField()),
                ('schema_sql', models.TextField(blank=True, null=True)),
                ('data_sql', models.TextField(blank=True, null=True)),
                ('tracking', models.CharField(blank=True, max_length=188, null=True)),
                ('tracking_active', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'pma__tracking',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PmaUserconfig',
            fields=[
                ('username', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('timevalue', models.DateTimeField()),
                ('config_data', models.TextField()),
            ],
            options={
                'db_table': 'pma__userconfig',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PmaUsergroups',
            fields=[
                ('usergroup', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('tab', models.CharField(max_length=64)),
                ('allowed', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'pma__usergroups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PmaUsers',
            fields=[
                ('username', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('usergroup', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'pma__users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sms5Book',
            fields=[
                ('bk_no', models.AutoField(primary_key=True, serialize=False)),
                ('bg_no', models.IntegerField()),
                ('mb_no', models.IntegerField()),
                ('mb_id', models.CharField(max_length=20)),
                ('bk_name', models.CharField(max_length=255)),
                ('bk_hp', models.CharField(max_length=255)),
                ('bk_receipt', models.IntegerField()),
                ('bk_datetime', models.DateTimeField()),
                ('bk_memo', models.TextField()),
            ],
            options={
                'db_table': 'sms5_book',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sms5BookGroup',
            fields=[
                ('bg_no', models.AutoField(primary_key=True, serialize=False)),
                ('bg_name', models.CharField(max_length=255)),
                ('bg_count', models.IntegerField()),
                ('bg_member', models.IntegerField()),
                ('bg_nomember', models.IntegerField()),
                ('bg_receipt', models.IntegerField()),
                ('bg_reject', models.IntegerField()),
            ],
            options={
                'db_table': 'sms5_book_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sms5Config',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cf_phone', models.CharField(max_length=255)),
                ('cf_datetime', models.DateTimeField()),
            ],
            options={
                'db_table': 'sms5_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sms5Form',
            fields=[
                ('fo_no', models.AutoField(primary_key=True, serialize=False)),
                ('fg_no', models.IntegerField()),
                ('fg_member', models.CharField(max_length=1)),
                ('fo_name', models.CharField(max_length=255)),
                ('fo_content', models.TextField()),
                ('fo_datetime', models.DateTimeField()),
            ],
            options={
                'db_table': 'sms5_form',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sms5FormGroup',
            fields=[
                ('fg_no', models.AutoField(primary_key=True, serialize=False)),
                ('fg_name', models.CharField(max_length=255)),
                ('fg_count', models.IntegerField()),
                ('fg_member', models.IntegerField()),
            ],
            options={
                'db_table': 'sms5_form_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sms5History',
            fields=[
                ('hs_no', models.AutoField(primary_key=True, serialize=False)),
                ('wr_no', models.IntegerField()),
                ('wr_renum', models.IntegerField()),
                ('bg_no', models.IntegerField()),
                ('mb_no', models.IntegerField()),
                ('mb_id', models.CharField(max_length=20)),
                ('bk_no', models.IntegerField()),
                ('hs_name', models.CharField(max_length=30)),
                ('hs_hp', models.CharField(max_length=255)),
                ('hs_datetime', models.DateTimeField()),
                ('hs_flag', models.IntegerField()),
                ('hs_code', models.CharField(max_length=255)),
                ('hs_memo', models.CharField(max_length=255)),
                ('hs_log', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'sms5_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sms5Write',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wr_no', models.IntegerField()),
                ('wr_renum', models.IntegerField()),
                ('wr_reply', models.CharField(max_length=255)),
                ('wr_message', models.CharField(max_length=255)),
                ('wr_booking', models.DateTimeField()),
                ('wr_total', models.IntegerField()),
                ('wr_re_total', models.IntegerField()),
                ('wr_success', models.IntegerField()),
                ('wr_failure', models.IntegerField()),
                ('wr_datetime', models.DateTimeField()),
                ('wr_memo', models.TextField()),
            ],
            options={
                'db_table': 'sms5_write',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImZacadQ1Bk',
            fields=[
                ('zq_pk', models.AutoField(db_column='ZQ_PK', primary_key=True, serialize=False)),
                ('zq_code', models.IntegerField(blank=True, db_column='ZQ_CODE', null=True)),
                ('zq_q1', models.CharField(blank=True, db_column='ZQ_Q1', max_length=200, null=True)),
                ('zq_a1', models.CharField(blank=True, db_column='ZQ_A1', max_length=2000, null=True)),
            ],
            options={
                'db_table': 'IM_ZACAD_Q1_BK',
            },
        ),
        migrations.CreateModel(
            name='ImZacadQ2Bk',
            fields=[
                ('zq_pk', models.AutoField(db_column='ZQ_PK', primary_key=True, serialize=False)),
                ('zq_q2', models.CharField(blank=True, db_column='ZQ_Q2', max_length=200, null=True)),
            ],
            options={
                'db_table': 'IM_ZACAD_Q2_BK',
            },
        ),
    ]
